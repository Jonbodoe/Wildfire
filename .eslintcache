[{"/Users/jonathanle/Desktop/wildfire-app/src/index.js":"1","/Users/jonathanle/Desktop/wildfire-app/src/app/routes.js":"2","/Users/jonathanle/Desktop/wildfire-app/src/pages/Login.js":"3","/Users/jonathanle/Desktop/wildfire-app/src/pages/Maps.js":"4","/Users/jonathanle/Desktop/wildfire-app/src/components/ProfileNav.js":"5","/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/UpdateDetails.js":"6","/Users/jonathanle/Desktop/wildfire-app/src/features/dashboard/DashboardIncidents.js":"7","/Users/jonathanle/Desktop/wildfire-app/src/features/dashboard/DashboardWeather.js":"8","/Users/jonathanle/Desktop/wildfire-app/src/features/updates/UpdateDetails.js":"9","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsTitle.js":"10","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsBlock.js":"11","/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/IncidentListLabels.js":"12","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsCaption.js":"13","/Users/jonathanle/Desktop/wildfire-app/src/App.js":"14","/Users/jonathanle/Desktop/wildfire-app/src/app/reducers/incidents/incidentSlice.js":"15","/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/IncidentItem.js":"16","/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/IncidentDetails.js":"17","/Users/jonathanle/Desktop/wildfire-app/src/pages/NotFound.js":"18","/Users/jonathanle/Desktop/wildfire-app/src/pages/Dashboard.js":"19","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsUser.js":"20","/Users/jonathanle/Desktop/wildfire-app/src/pages/Incidents.js":"21","/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/IncidentList.js":"22","/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/IncidentFilterList.js":"23","/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/IncidentListCategories.js":"24","/Users/jonathanle/Desktop/wildfire-app/src/pages/Updates.js":"25","/Users/jonathanle/Desktop/wildfire-app/src/features/dashboard/DashboardUpdates.js":"26","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsContent.js":"27","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsContainer.js":"28","/Users/jonathanle/Desktop/wildfire-app/src/components/Navigation.js":"29","/Users/jonathanle/Desktop/wildfire-app/src/components/DrawerNav.js":"30","/Users/jonathanle/Desktop/wildfire-app/src/components/PageTitle.js":"31","/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/Weather.js":"32","/Users/jonathanle/Desktop/wildfire-app/src/features/dashboard/DashboardMaps.js":"33","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsHeader.js":"34","/Users/jonathanle/Desktop/wildfire-app/src/components/MainContainer.js":"35","/Users/jonathanle/Desktop/wildfire-app/src/pages/Profile.js":"36","/Users/jonathanle/Desktop/wildfire-app/src/features/updates/UpdatesList.js":"37","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsLoader.js":"38","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsTable.js":"39","/Users/jonathanle/Desktop/wildfire-app/src/components/MapView.js":"40","/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/MapDetails.js":"41","/Users/jonathanle/Desktop/wildfire-app/src/features/maps/MapDetails.js":"42","/Users/jonathanle/Desktop/wildfire-app/src/components/MapDisplay.js":"43","/Users/jonathanle/Desktop/wildfire-app/src/app/store.js":"44","/Users/jonathanle/Desktop/wildfire-app/src/components/PrimaryLinks.js":"45","/Users/jonathanle/Desktop/wildfire-app/src/pages/profile.js":"46","/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/weather.js":"47","/Users/jonathanle/Desktop/wildfire-app/src/pages/incidents.js":"48","/Users/jonathanle/Desktop/wildfire-app/src/pages/maps.js":"49","/Users/jonathanle/Desktop/wildfire-app/src/pages/login.js":"50","/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/updateDetails.js":"51","/Users/jonathanle/Desktop/wildfire-app/src/pages/updates.js":"52","/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/incidentDetails.js":"53","/Users/jonathanle/Desktop/wildfire-app/src/app/reducers/logins/loginSlice.js":"54","/Users/jonathanle/Desktop/wildfire-app/src/pages/notFound.js":"55","/Users/jonathanle/Desktop/wildfire-app/src/pages/summary.js":"56","/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/mapDetails.js":"57","/Users/jonathanle/Desktop/wildfire-app/src/features/maps/MapKey.js":"58","/Users/jonathanle/Desktop/wildfire-app/src/pages/dashboard.js":"59","/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/CaseDetails.js":"60","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsSelect.js":"61","/Users/jonathanle/Desktop/wildfire-app/src/app/detailStatusLabels.js":"62","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsTextField.js":"63","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsForm.js":"64","/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/CaseImageList.js":"65","/Users/jonathanle/Desktop/wildfire-app/src/components/PrimaryButton.js":"66","/Users/jonathanle/Desktop/wildfire-app/src/components/BrandLogo.js":"67","/Users/jonathanle/Desktop/wildfire-app/src/images/svgs/loadingSVG.js":"68","/Users/jonathanle/Desktop/wildfire-app/src/images/svgs/incidentSVG.js":"69"},{"size":856,"mtime":1616454034363,"results":"70","hashOfConfig":"71"},{"size":3223,"mtime":1617049277085,"results":"72","hashOfConfig":"71"},{"size":883,"mtime":1615682911278,"results":"73","hashOfConfig":"71"},{"size":1842,"mtime":1615682916546,"results":"74","hashOfConfig":"71"},{"size":2903,"mtime":1615850373174,"results":"75","hashOfConfig":"71"},{"size":124,"mtime":1615683049757,"results":"76","hashOfConfig":"71"},{"size":2209,"mtime":1616980805682,"results":"77","hashOfConfig":"71"},{"size":739,"mtime":1617079382949,"results":"78","hashOfConfig":"71"},{"size":1785,"mtime":1613535427842,"results":"79","hashOfConfig":"71"},{"size":548,"mtime":1617069710518,"results":"80","hashOfConfig":"71"},{"size":952,"mtime":1616980761229,"results":"81","hashOfConfig":"71"},{"size":1175,"mtime":1614634983587,"results":"82","hashOfConfig":"71"},{"size":507,"mtime":1613521898485,"results":"83","hashOfConfig":"71"},{"size":2709,"mtime":1617250779333,"results":"84","hashOfConfig":"71"},{"size":7406,"mtime":1617140047807,"results":"85","hashOfConfig":"71"},{"size":4113,"mtime":1616974066726,"results":"86","hashOfConfig":"71"},{"size":5678,"mtime":1617481476973,"results":"87","hashOfConfig":"71"},{"size":381,"mtime":1615682921298,"results":"88","hashOfConfig":"71"},{"size":1062,"mtime":1615682904932,"results":"89","hashOfConfig":"71"},{"size":1609,"mtime":1614228766794,"results":"90","hashOfConfig":"71"},{"size":1103,"mtime":1614456402300,"results":"91","hashOfConfig":"71"},{"size":957,"mtime":1616975594881,"results":"92","hashOfConfig":"71"},{"size":592,"mtime":1615686177163,"results":"93","hashOfConfig":"71"},{"size":1933,"mtime":1617519855637,"results":"94","hashOfConfig":"71"},{"size":489,"mtime":1615682930862,"results":"95","hashOfConfig":"71"},{"size":4867,"mtime":1616042930314,"results":"96","hashOfConfig":"71"},{"size":1007,"mtime":1615357478044,"results":"97","hashOfConfig":"71"},{"size":1486,"mtime":1615262066987,"results":"98","hashOfConfig":"71"},{"size":4418,"mtime":1616295977820,"results":"99","hashOfConfig":"71"},{"size":3014,"mtime":1617162691404,"results":"100","hashOfConfig":"71"},{"size":602,"mtime":1616982041705,"results":"101","hashOfConfig":"71"},{"size":105,"mtime":1612374534311,"results":"102","hashOfConfig":"71"},{"size":1772,"mtime":1616095301255,"results":"103","hashOfConfig":"71"},{"size":543,"mtime":1617519936737,"results":"104","hashOfConfig":"71"},{"size":663,"mtime":1616184452319,"results":"105","hashOfConfig":"71"},{"size":219,"mtime":1615682926079,"results":"106","hashOfConfig":"71"},{"size":4730,"mtime":1616100208120,"results":"107","hashOfConfig":"71"},{"size":698,"mtime":1614546459385,"results":"108","hashOfConfig":"71"},{"size":3016,"mtime":1617049017079,"results":"109","hashOfConfig":"71"},{"size":2135,"mtime":1616095492677,"results":"110","hashOfConfig":"71"},{"size":115,"mtime":1615683037344,"results":"111","hashOfConfig":"71"},{"size":1031,"mtime":1613536022608,"results":"112","hashOfConfig":"71"},{"size":2005,"mtime":1617066957982,"results":"113","hashOfConfig":"71"},{"size":438,"mtime":1617231040770,"results":"114","hashOfConfig":"71"},{"size":147,"mtime":1615243108508,"results":"115","hashOfConfig":"71"},{"size":3817,"mtime":1615943203605,"results":"116","hashOfConfig":"71"},{"size":105,"mtime":1615683056699,"results":"117","hashOfConfig":"71"},{"size":2035,"mtime":1617519922694,"results":"118","hashOfConfig":"71"},{"size":882,"mtime":1616543537050,"results":"119","hashOfConfig":"71"},{"size":8402,"mtime":1617519582058,"results":"120","hashOfConfig":"71"},{"size":124,"mtime":1615683049757,"results":"121","hashOfConfig":"71"},{"size":489,"mtime":1615682930862,"results":"122","hashOfConfig":"71"},{"size":130,"mtime":1615752065742,"results":"123","hashOfConfig":"71"},{"size":2122,"mtime":1617288583651,"results":"124","hashOfConfig":"71"},{"size":379,"mtime":1617054207374,"results":"125","hashOfConfig":"71"},{"size":1689,"mtime":1615932445886,"results":"126","hashOfConfig":"71"},{"size":115,"mtime":1615683037344,"results":"127","hashOfConfig":"71"},{"size":3638,"mtime":1617251757269,"results":"128","hashOfConfig":"71"},{"size":1065,"mtime":1616095432352,"results":"129","hashOfConfig":"71"},{"size":6233,"mtime":1617310541278,"results":"130","hashOfConfig":"71"},{"size":1648,"mtime":1617046342213,"results":"131","hashOfConfig":"71"},{"size":782,"mtime":1616971691850,"results":"132","hashOfConfig":"71"},{"size":1173,"mtime":1617048915987,"results":"133","hashOfConfig":"71"},{"size":1847,"mtime":1617039035772,"results":"134","hashOfConfig":"71"},{"size":933,"mtime":1617047981880,"results":"135","hashOfConfig":"71"},{"size":908,"mtime":1617519928961,"results":"136","hashOfConfig":"71"},{"size":770,"mtime":1617149638682,"results":"137","hashOfConfig":"71"},{"size":3670,"mtime":1617519567987,"results":"138","hashOfConfig":"71"},{"size":3543,"mtime":1617519720586,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"1cnh2k5",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"164"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"164"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"161"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"161"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"152"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"161"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"161"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jonathanle/Desktop/wildfire-app/src/index.js",[],["306","307"],"/Users/jonathanle/Desktop/wildfire-app/src/app/routes.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/Login.js",["308"],"/Users/jonathanle/Desktop/wildfire-app/src/pages/Maps.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/components/ProfileNav.js",["309","310"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, MenuItem } from '@material-ui/core';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Link from '@material-ui/core/Link';\nimport routes from '../app/routes';\nimport { checkLoginStatus } from './../app/reducers/logins/loginSlice'\n\nconst ITEM_HEIGHT = 40;\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: '0px 10px'\n    },\n}));\n\nconst ProfileNav = () => {\n    const profileImg = require('../images/profilePic.jpg');\n    const SecondaryLinks = routes.filter((route) => route.menu === 'SECONDARY');\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const isLoggedIn = useSelector(checkLoginStatus)\n    const dispatch = useDispatch()\n\n    const classes = useStyles();\n    const [login, logout, profile, summary] = SecondaryLinks\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    return <><IconButton\n        className={classes.margin}\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n    >\n        <Avatar src={profileImg.default} />\n    </IconButton>\n        <Menu\n            id=\"long-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={open}\n            onClose={handleClose}\n            PaperProps={{\n                style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: '20ch',\n                },\n            }}\n        >\n            <Link\n                component={RouterLink}\n                // Passing the react router link component into material UI's Link component\n                // exact={false}\n                to={isLoggedIn? logout.path : login.path}\n            >\n                <MenuItem>\n                    {isLoggedIn? logout.label : login.label}\n                </MenuItem>\n            </Link>\n            <Link\n                component={RouterLink}\n                to={profile.path}\n            >\n                <MenuItem>\n                    {profile.label}\n                </MenuItem>\n            </Link>\n        </Menu>\n    </>\n}\n\n\n// const MenuLinks = (props) => {\n//     // const MyLink = React.forwardRef((props, ref) => <Link innerRef={ref} {...props} />);\n//     return <Link\n//         // component={RouterLink}\n//         // Passing the react router link component into material UI's Link component\n//         // exact={false}\n//         // to={props.path}\n//     >\n//         <MenuItem>\n//             {/* {props.label} */}\n//         </MenuItem>\n//     </Link>\n// }\n\nexport default ProfileNav;",["311","312"],"/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/UpdateDetails.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/features/dashboard/DashboardIncidents.js",["313"],"import { Divider, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DetailsBlock from '../../components/DetailsBlock';\nimport DetailsCaption from '../../components/DetailsCaption';\nimport DetailsContainer from '../../components/DetailsContainer';\nimport DetailsHeader from '../../components/DetailsHeader';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport DetailsTable from '../../components/DetailsTable';\nimport _ from \"lodash\";\nimport {\n    listIncidents\n} from '../../app/reducers/incidents/incidentSlice'\n\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        color: theme.palette.secondary.dark\n    }\n}));\n\n\nconst DashboardIncidents = (props) => {\n    const incidentList = useSelector(listIncidents);\n    const openIncidentsList = incidentList.filter(incident => incident.incident.status === \"Open\")\n    const formattedIncidents = openIncidentsList.map((data)=> {\n        const { _id } = data;\n        return {_id,...data.incident, ...data.geographics}\n    });\n    \n    const classes = useStyles();\n    return <>\n        <DetailsContainer>\n            <Grid container>\n                <DetailsHeader header={`Incidents`} />\n                <Link className={classes.link} button=\"true\" component={RouterLink} to={props.path.path}>\n                    <ChevronRightIcon />\n                </Link>\n            </Grid>\n            <DetailsCaption caption={`Information regarding on-going incidents based on the current and or designated location`} />\n            <Divider />\n            <DetailsBlock>\n                <DetailsTable \n                    data={formattedIncidents} \n                    linkAccessors={\"_id\"}\n                    path={'/incidents'}\n                    allowedKeys={[\"municipal\", \"priority\", \"status\", \"volume_traffic\", \"_id\"]}\n                    tableHeader={[\"Municipal\", \"Priority\", \"Status\", \"Volume\", \"Id\"]}\n                />\n            </DetailsBlock>\n        </DetailsContainer>\n    </>\n}\n\nexport default DashboardIncidents;",["314","315"],"/Users/jonathanle/Desktop/wildfire-app/src/features/dashboard/DashboardWeather.js",[],["316","317"],"/Users/jonathanle/Desktop/wildfire-app/src/features/updates/UpdateDetails.js",[],["318","319"],"/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsTitle.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsBlock.js",[],["320","321"],"/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/IncidentListLabels.js",[],["322","323"],"/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsCaption.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/App.js",["324","325"],"/Users/jonathanle/Desktop/wildfire-app/src/app/reducers/incidents/incidentSlice.js",["326"],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import CaseDetails from '../../../features/incidents/CaseDetails';\n\nexport const fetchIncidents = createAsyncThunk('incidents/fetchIncidents', async () => {\n    const response = fetch(`${process.env.PORT || 'http://localhost:8080'}/incidents/get-incidents-db`)\n    // downloaded a fetch polyfill \n    .then(function(response) {\n        if (!response.ok) {\n            return response.statusText\n        }\n        return response.json();\n    })\n    return response\n});\n\nexport const incidentSlice = createSlice({\n    name: 'incident',\n    initialState: {\n        meta: {\n            status: 'idle',\n            fetch: true,\n            errorLog: {\n                error: false,\n                message: '',\n                errorCode: '',\n            }\n        },\n        data: {\n            selectedIncidentId: '',\n            incidentList: [],\n            selectedCaseId: '',\n        }\n    },\n    reducers:{\n        select: (state, {payload}) => {\n            state.data.selectedIncidentId = payload;\n            state.meta.status = 'success';\n        },\n        selectCase: (state, {payload}) => {\n            state.data.selectedCaseId = payload;\n            state.meta.status = 'success';\n        }\n    },\n    extraReducers: {\n        [fetchIncidents.pending]: (state) => {\n            state.meta.status = 'loading';\n        },\n        [fetchIncidents.fulfilled]: (state, action) => {\n            state.meta.status = 'success';\n            state.data.incidentList = action.payload;\n            // Need to figure out how to go about refreshing data \n        },\n        [fetchIncidents.rejected]: (state, action) => {\n            state.meta.status = 'failed';\n            state.meta.error = action.error.message\n            // state.data.incidentList = payload;\n        },\n    },\n});\n\nexport const { select, selectCase } = incidentSlice.actions;\n\nexport const selectIncident = state => state.incidents.data.selectedIncidentId;\nexport const selectCaseId = state => state.incidents.data.selectedCaseId;\nexport const listIncidents = state => state.incidents.data.incidentList;\nexport const errorLog = state => state.incidents.meta.errorLog;\nexport const refreshState = state => state.incidents.meta.refresh;\n// For getting the value of the current state throughout the app;\n\n// Formatter Function for preparing selectedIncident Data for DetailsBlock\n// This moves the responsibility out of the component, and into the reducer.\n// Transformation and formatting of data makes more sense in reducer middleware than the React component. (seg: Smart vs Dumb components)\n\n// export const selectedIncident = incidents.find((incident) => !incident._id.indexOf(selectedId));\nexport const getSelectedIncident = (state) => state.incidents.data.incidentList.find((incident) => !incident._id.indexOf(selectIncident));\nexport const getSelectedCase = (state) => {\n    const selectedId = selectIncident(state);\n    const incidentList = listIncidents(state);\n    const selectedIncident = incidentList.find((incident) => !incident._id.indexOf(selectedId));\n\n    if (!selectedIncident) { return {}; }\n\n    const caseList = selectedIncident.incident.cases\n    const caseId = selectCaseId(state);\n    const selectedCase = caseList.find((cases)=> !cases.zip_code.indexOf(caseId));\n\n    return selectedCase;\n}\n\nexport const getIncidentDetailBlocks = (state) => {\n    const selectedId = selectIncident(state); // Reusing selectors above\n    const incidentList = listIncidents(state); // Reusing selectors above\n    const selectedIncident = incidentList.find((incident) => !incident._id.indexOf(selectedId));\n\n    if (!selectedIncident) { return {}; }\n\n    const { geographics, incident } = selectedIncident;\n    const cases = getSelectedCase(state);\n    // console.log(cases)\n\n    // Set up the data representation of our detail blocks.\n    // This keeps the data formatting responsibility separate from presentational components.\n    // We can break this down further if we wanted to with each \"block\" having its own formatter function outputting the correct object structure, then adding it to the array.\n    const blocks =  [\n        {\n            incidentDetails: [\n                {\n                    title: 'Incident Information',\n                    rows:  [\n                        { type: 'Incident', content: geographics.municipal },\n                        { type: 'State', content: geographics.state }, \n                        { type: 'Region', content: geographics.region }, \n                        { type: 'ID', content: selectedIncident._id.substr(selectedId.length - 5) }, \n                        { type: 'Initial Time', content: `${geographics.time_stamp} ${geographics.time_zone} `}, \n                        { type: 'Zipcodes Affected', content: incident.zip_codes.map(zip => `${zip}, `) }\n                    ] \n                },\n                {\n                    title: 'Areas Affected',\n                    rows:  [\n                        { type: 'Volume Traffic', content: incident.volume_traffic },\n                        { type: 'Api Keywords', content: incident.api_keywords.map(keyword => `${keyword},`)},\n                        { type: 'Property', content: incident.property.map(property => `${property}, `) },\n                        { type: 'Wildfire Type', content: incident.wildfire_type },\n                    ] \n                },\n            ]\n        },\n    ];\n\n    return blocks || [];\n};\n\nexport const getCaseDetailBlocks = (state) => {\n    const selectedId = selectIncident(state); // Reusing selectors above\n    const incidentList = listIncidents(state); // Reusing selectors above\n    const selectedIncident = incidentList.find((incident) => !incident._id.indexOf(selectedId));\n    const cases = getSelectedCase(state);\n\n    if (!selectedIncident && cases) { return {}; }\n    const { geographics, incident } = selectedIncident;\n\n    const blocks =  [\n        {\n            caseDetails: [\n                {\n                    title: 'Case Information',\n                    rows:  [\n                        { type: 'Incident', content: geographics.municipal },\n                        { type: 'State', content: geographics.state }, \n                        { type: 'Region', content: geographics.region }, \n                        { type: 'ID', content: selectedIncident._id.substr(selectedId.length - 5) }, \n                        { type: 'Initial Time', content: `${cases.initial_time} ${geographics.time_zone} `}, \n                        { type: 'Api Keywords', content: incident.api_keywords.map(keyword => `${keyword},`)},\n                        { type: 'Authorities Present', content: cases.authorities_present}\n                    ]\n                },\n                {\n                    title: 'Images',\n                    rows: cases.images\n                },\n                {\n                    title: 'Resource Assessment',\n                    rows: [\n                        {\n                            type: 'Valuable Assests Nearby',\n                            content: ''\n                        },\n                        {\n                            subTitle: 'Hazard Warnings',\n                            content: ''\n                        }\n                    ]\n                }\n            ]\n        }\n    ];\n    return blocks || [];\n}\nexport default incidentSlice.reducer;\n\n","/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/IncidentItem.js",["327"],"import React from 'react';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectIncident,\n    select\n} from '../../app/reducers/incidents/incidentSlice'\nimport { NavLink as RouterLink, useRouteMatch} from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\n// import DetailsTitle from '../../components/DetailsTitle';\n\nconst useStyles = makeStyles((theme) => ({\n    items: {\n        padding: theme.spacing(0, 1.5),\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n    },\n    itemContent: {\n        textAlign: 'left',\n        flexGrow: 1,\n        flexBasis: 0,\n    },\n    icon: {\n        display: 'flex',\n        textAlign: 'right',\n        alignItems: 'center',\n    },\n    button: {\n        width: '100%',\n        textTransform: 'none',\n        borderRadius: '0px',\n        height: theme.spacing(5),\n        color: theme.palette.primary.main,\n        borderLeft: '4px solid',\n        // backgroundColor: theme.palette.secondary.lighter,\n        // color: theme.palette.primary.main,\n        // margin: theme.spacing(1, 0),\n        // '$:focus-visible': {\n        //     border: `3px solid theme.p`\n        // }\n    },\n    inactive: {\n        backgroundColor: theme.palette.secondary.lighter,\n        margin: theme.spacing(0.7, 0),\n        '&:hover, &:focus': {\n            backgroundColor: theme.palette.secondary.darkish,\n        },\n    },\n    active: {\n        backgroundColor: theme.palette.secondary.dark,\n        color: theme.palette.secondary.lighter,\n        margin: theme.spacing(0.7, 1.5),\n        '&$active': {\n            backgroundColor: theme.palette.secondary.dark,\n        },\n    },\n    openLabel: {\n        borderColor: theme.palette.warning.light\n    },\n    reviewingLabel: {\n        borderColor: theme.palette.info.light\n    },\n    mustResolveLabel: {\n        borderColor: theme.palette.error.light\n    },\n    resolvedLabel: {\n        borderColor: theme.palette.success.light\n    },\n}));\n\nconst IncidentItem = (props) => {\n    const classes = useStyles();\n    let { path, url } = useRouteMatch();\n\n    const labelColorSwitch = (props) => {\n        switch (props.query) {\n            case \"Open\": return classes.openLabel;\n            case \"Reviewing\": return classes.reviewingLabel;\n            case \"Must Resolve\": return classes.mustResolveLabel;\n            case \"Resolved\": return classes.resolvedLabel;\n            default: return\n        }\n    }\n\n    const setSelectedId = (event) => {\n        dispatch(select(event))\n    };\n    const dispatch = useDispatch()\n    const selectedId = useSelector(selectIncident)\n    // console.log(_.isEmpty(selectedId));\n    \n    return <>\n    <Link \n        key={props.state._id} \n        component={RouterLink} \n        to={`${url}/${props.state._id}`}\n        // activeClassName={}\n        // Needa figure out the color issue with this.\n    >\n    <Button\n        // disableRipple\n        // focusVisibleClassName\n        data-id={props.state._id}\n        className={`${classes.button} ${props.state._id === selectedId ? classes.active : classes.inactive} ${labelColorSwitch(props)}`}\n        onClick={(e) => setSelectedId(e.currentTarget.dataset.id)}\n    >\n        <Grid item className={`${classes.items}`}>\n            <Grid className={classes.itemContent}>\n                <Typography variant=\"body2\">{props.state.geographics.municipal}</Typography>\n            </Grid>\n            <Grid className={classes.itemContent}>\n                <Typography variant=\"body2\">{props.state.geographics.state}</Typography>\n            </Grid>\n            <Grid className={classes.itemContent}>\n                <Typography variant=\"body2\">{props.state.incident.volume_traffic}</Typography>\n            </Grid>\n            <Grid className={classes.itemContent}>\n                <Typography variant=\"body2\">{props.state.incident.status}</Typography>\n            </Grid>\n        </Grid>\n    </Button>\n    </Link>\n</>\n}\n\nexport default IncidentItem;\n","/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/IncidentDetails.js",["328","329","330"],"import React, { useEffect, useState } from 'react';\nimport { useParams, useRouteMatch } from \"react-router-dom\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport DetailsContainer from '../../components/DetailsContainer';\nimport DetailsBlock from '../../components/DetailsBlock';\nimport DetailsHeader from '../../components/DetailsHeader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from \"lodash\";\nimport {\n    selectIncident, getIncidentDetailBlocks, select\n} from '../../app/reducers/incidents/incidentSlice'\nimport { Grid, LinearProgress } from '@material-ui/core';\nimport DetailsTable from '../../components/DetailsTable';\nimport DetailsSelect from '../../components/DetailsSelect';\nimport labels from '../../app/detailStatusLabels';\n// import { Button } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport DetailsTextField from '../../components/DetailsTextField';\nimport PrimaryButton from '../../components/PrimaryButton';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: theme.spacing(10),\n    },\n    colorPrimary: {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n        backgroundColor: theme.palette.secondary.lighter\n    },\n}))(LinearProgress);\n\nconst useStyles = makeStyles((theme) => ({\n    saveButton: {\n        fontWeight: 600,\n        borderRadius: '0px',\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.secondary.main,\n        margin: theme.spacing(2, 0),\n        '&:hover, &:focus': {\n            backgroundColor: theme.palette.secondary.darkish,\n        },\n    },\n}))\n\nconst IncidentDetails = (props) => {\n    const classes = useStyles();\n    let { path, url } = useRouteMatch();\n    let [status, priority] = labels;\n    const { incidents } = props;\n    const isLoaded = !_.isEmpty(incidents);\n    const [loading, setloading] = useState(isLoaded);\n    const { incidentId } = useParams();\n    const dispatch = useDispatch();\n    const selectedId = useSelector(selectIncident);\n    const detailBlocks = useSelector(getIncidentDetailBlocks);\n\n    const selectedIncident = incidents.find((incident) => !incident._id.indexOf(selectedId));\n\n    useEffect(() => {\n        setloading(!isLoaded ? true : false);\n        if (!selectedId) {\n            dispatch(select(incidentId));\n        }\n        // If hard refresh, dispatch a select incident id based on the URL params to keep in sync\n        // Self: If want to keep the tabs in sync use local storage to store data alternative to useEffect.\n    }, [selectedId, selectedIncident]);\n\n    if (!selectedIncident) { return null; }\n    // If the incident is not selected, return early to prevent re-renders\n\n    const { geographics, incident } = selectedIncident;\n    const [ incidentInfo ] = detailBlocks;\n    const [ IncidentInformation, AreasAffected ] = incidentInfo.incidentDetails;\n    // To deconstruct the array for easier use\n\n    const testButton = () =>{\n        return console.log('changes saved!');\n    }\n\n    return <DetailsContainer query={!loading && isLoaded ? incident.status : ''}>\n        {\n            !loading ?\n                <>\n                    <DetailsHeader header={`Incident: ${geographics.municipal}`} />\n                    <DetailsBlock title={IncidentInformation.title} detailRows={IncidentInformation.rows} />\n                    <DetailsBlock title={`Incident Cases`} >\n                        <DetailsTable\n                            data={incident.cases}\n                            linkAccessors={'zip_code'}\n                            path={`${url}/case`}\n                            // base url to have links within the table rows.\n                            allowedKeys={[\"zip_code\", \"initial_time\", \"volume_traffic\", \"reviewed\"]}\n                            // for filtering specific data properties\n                            tableHeader={[\"Zip Code\", \"Initial Time\", \"Volume Traffic\", \"Review\"]}\n                        />\n                    </DetailsBlock>\n                    <DetailsBlock title={AreasAffected.title} detailRows={AreasAffected.rows} />\n                    <DetailsBlock title={`Additional Notes`}>\n                        <DetailsTextField rows={4} info={incident.additional_notes} label={`List any additional information`} />\n                    </DetailsBlock>\n                    <DetailsBlock title={`Incident Progress`}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <DetailsSelect label={'Status'} dataLabels={status.statuses} selected={incident.status} />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <DetailsSelect label={'Priority'} dataLabels={priority.priorities} selected={incident.priority} />\n                            </Grid>\n                            <PrimaryButton handler={testButton} text={'Save Changes'}>\n                                <NavigateNextIcon />\n                            </PrimaryButton>\n                        </Grid>\n                    </DetailsBlock>\n                    {/* \n                        Listen for all 3 values\n                        submit on button event\n                        should wrap in a form element\n                        https://formik.org/docs/examples/basic use formik\n                    */}\n                </>\n                :\n                <>\n                    <BorderLinearProgress variant=\"indeterminate\" />\n                </>\n        }\n\n    </DetailsContainer>\n}\n\nexport default IncidentDetails;\n","/Users/jonathanle/Desktop/wildfire-app/src/pages/NotFound.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/Dashboard.js",["331"],"/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsUser.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/Incidents.js",["332","333","334","335"],"import React, { useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport MainContainer from '../components/MainContainer';\n// import PageTitle from '../components/PageTitle';\nimport IncidentList from '../features/incidents/IncidentList';\nimport { useSelector, useDispatch } from 'react-redux';\n// import IncidentView from '../features/incidents/IncidentDetails';\nimport IncidentDetails from '../features/incidents/IncidentDetails';\nimport {\n    listIncidents, fetchIncidents, errorLog, refreshState\n} from './../app/reducers/incidents/incidentSlice'\n// import Results from '../components/Results';\n\nconst Incidents = () => {\n    const incidentsList = useSelector(listIncidents);\n    const errorMessage = useSelector(errorLog);\n    // const errorMessage = useSelector(errorLog);\n    return <MainContainer>\n        <Grid item md={6}>\n            <IncidentList state={incidentsList} error={errorMessage}/>\n        </Grid>\n        <Grid item md={6}>\n            <IncidentDetails state={incidentsList} error={errorMessage}/>\n        </Grid>\n    </MainContainer>\n}\n\n\nexport default Incidents",["336","337"],"/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/IncidentList.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/IncidentFilterList.js",[],["338","339"],"/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/IncidentListCategories.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/Updates.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/features/dashboard/DashboardUpdates.js",["340"],"import { Divider } from '@material-ui/core';\nimport React from 'react';\nimport DetailsBlock from '../../components/DetailsBlock';\nimport DetailsCaption from '../../components/DetailsCaption';\nimport DetailsContainer from '../../components/DetailsContainer';\nimport DetailsHeader from '../../components/DetailsHeader';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Button from '@material-ui/core/Button';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\n\nconst announcementData = [\n    {\n        name: 'William Stagner',\n        position: 'Logistics Section Chief',\n        message: `Truncation should be conditionally applicable on this long line of text\n        as this is a much longer line than what the container can support.`,\n        time: '2 mins ago'\n    },\n    {\n        name: 'Ryan Higgins',\n        position: 'Incident Commander',\n        message: `Truncation should be conditionally applicable on this long line of text\n        as this is a much longer line than what the container can support.`,\n        time: '10 mins ago'\n    },\n    {\n        name: 'James Kabbeko',\n        position: 'Operations Section Chief',\n        message: `Truncation should be conditionally applicable on this long line of text\n        as this is a much longer line than what the container can support.`,\n        time: '13 mins ago'\n    },\n\n]\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        maxHeight: '200px',\n        overflow: 'auto'\n    },\n    row: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        //   overflow: 'hidden',\n        //   padding: theme.spacing(0, 3),\n    },\n    icon: {\n        // display: 'flex',\n        // alignItems: 'center',\n        backgroundColor: theme.palette.secondary.dark,\n        padding: theme.spacing(0),\n        margin: theme.spacing(0)\n    },\n    iconContainer: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    title: {\n        color: theme.palette.primary.light,\n    },\n    name: {\n        color: theme.palette.primary.dark,\n        fontWeight: '600',\n        marginBottom: theme.spacing(0.75)\n    },\n    containerSpaceBetween: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    button: {\n        backgroundColor: theme.palette.secondary.dark,\n        color: theme.palette.secondary.lighter,\n        padding: theme.spacing(0),\n        margin: theme.spacing(0)\n    },\n    link: {\n        color: theme.palette.secondary.dark\n    }\n}));\n\nconst DashboardUpdates = (props) => {\n    const classes = useStyles();\n    return <>\n        <DetailsContainer>\n            <Grid container>\n                <DetailsHeader header={`Updates`} />\n                <Link button=\"true\" className={classes.link} component={RouterLink} to={props.path.path}>\n                    <ChevronRightIcon/>\n                </Link>\n            </Grid>\n            {/* <DetailsHeader header={`Updates`} /> */}\n            <DetailsCaption caption={`Get the latest updates from personnel reviewing and updating incidents and or cases`} />\n            <Divider />\n            <div className={classes.container}>\n                {\n                    announcementData.map((announcement, i) => \n                    <DetailsBlock key={i}>\n                        <div className={classes.row}>\n                            <Grid container wrap=\"nowrap\" spacing={2}>\n                                <Grid item className={classes.iconContainer}>\n                                    <Avatar className={classes.icon}>{announcement.name.charAt(0)}</Avatar>\n                                </Grid>\n                                <Grid item xs zeroMinWidth>\n                                    <Grid container className={classes.containerSpaceBetween}>\n                                        <Typography variant=\"body2\" className={classes.title}>{announcement.position}</Typography>\n                                        <Typography variant=\"body2\" className={classes.title}>{announcement.time}</Typography>\n                                    </Grid>\n                                    <Typography variant=\"body2\" className={classes.name}>{announcement.name}</Typography>\n                                    <Typography variant=\"body2\" className={classes.message} noWrap>{announcement.message}</Typography>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </DetailsBlock>           \n                    )\n                }\n            </div>\n        </DetailsContainer>\n    </>\n}\n\nexport default DashboardUpdates","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsContent.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsContainer.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/components/Navigation.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/components/DrawerNav.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/components/PageTitle.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/Weather.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/features/dashboard/DashboardMaps.js",["341"],"import { Divider, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DetailsBlock from '../../components/DetailsBlock';\nimport DetailsCaption from '../../components/DetailsCaption';\nimport DetailsContainer from '../../components/DetailsContainer';\nimport DetailsHeader from '../../components/DetailsHeader';\nimport MapDisplay from '../../components/MapDisplay';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { Link as RouterLink} from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport MapKey from '../maps/MapKey';\n\nconst width = 250;\n\nconst useStyles = makeStyles((theme) => ({\n    details: {\n        width: width,\n        paddingLeft: theme.spacing(2.5)\n    },\n    map: {\n        width: `calc(100% - ${width}px)`,\n        height: theme.spacing(50),\n    },\n    link: {\n        color: theme.palette.secondary.dark\n    }\n}));\n\n\nconst DashboardMaps = (props) => {\n    const classes = useStyles();\n    return <>\n        <DetailsContainer>\n            <Grid container>\n                <MapDisplay />\n                <Grid className={classes.details}>\n                    <Grid container>\n                        <DetailsHeader header={`Maps`} />\n                        <Link className={classes.link} button=\"true\" component={RouterLink} to={props.path.path}>\n                            <ChevronRightIcon />\n                        </Link>\n                    </Grid>\n                    <DetailsCaption caption={`View real time cases and incidents occuring based on the location`} />\n                    <Divider />\n                    <MapKey/>\n                </Grid>\n            </Grid>\n        </DetailsContainer>\n    </>\n}\n\nexport default DashboardMaps;",["342","343"],"/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsHeader.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/components/MainContainer.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/Profile.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/features/updates/UpdatesList.js",["344","345","346","347","348"],"import { Button, Typography } from '@material-ui/core';\nimport React from 'react';\nimport DetailsHeader from '../../components/DetailsHeader';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Button from '@material-ui/core/Button';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n// import MainContainer from '../components/MainContainer';\n\nconst announcementData = [\n    {\n        name: 'William Stagner',\n        user_id: '1',\n        position: 'Logistics Section Chief',\n        message: `Truncation should be conditionally applicable on this long line of text\n        as this is a much longer line than what the container can support.`,\n        time: '2 mins ago'\n    },\n    {\n        name: 'Ryan Higgins',\n        user_id: '2',\n        position: 'Incident Commander',\n        message: `Truncation should be conditionally applicable on this long line of text\n        as this is a much longer line than what the container can support.`,\n        time: '10 mins ago'\n    },\n    {\n        name: 'James Kabbeko',\n        user_id: '3',\n        position: 'Operations Section Chief',\n        message: `Truncation should be conditionally applicable on this long line of text\n        as this is a much longer line than what the container can support.`,\n        time: '13 mins ago'\n    },\n\n]\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        // maxHeight: '200px'\n        margin: theme.spacing(1),\n        overflow: 'auto'\n    },\n    ItemContainer: {\n        backgroundColor: theme.palette.secondary.lighter,\n        padding: theme.spacing(2, 2.5),\n        margin: theme.spacing(1.25, 0)\n    },\n\n    row: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        //   overflow: 'hidden',\n        //   padding: theme.spacing(0, 3),\n    },\n    icon: {\n        // display: 'flex',\n        // alignItems: 'center',\n        backgroundColor: theme.palette.secondary.dark,\n        padding: theme.spacing(0),\n        margin: theme.spacing(0)\n    },\n    iconContainer: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    title: {\n        color: theme.palette.primary.light,\n    },\n    name: {\n        color: theme.palette.primary.dark,\n        fontWeight: '600',\n        marginBottom: theme.spacing(0.75)\n    },\n    containerSpaceBetween: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    button: {\n        // backgroundColor: theme.palette.secondary.dark,\n        backgroundColor: theme.palette.secondary.lighter,\n        // color: theme.palette.secondary.lighter,\n        textTransform: 'none',\n        borderRadius: '0px',\n        height: theme.spacing(10),\n    },\n    link: {\n        color: theme.palette.secondary.dark\n    }\n}));\n\nconst UpdatesList = () => {\n    const classes = useStyles();\n    return <div className={classes.container}>\n        <DetailsHeader header={`Updates`} />\n        {\n            announcementData.map((announcement, i) => (\n                <Grid item className={classes.ItemContainer}>\n                    <div className={classes.row}>\n                        <Grid container wrap=\"nowrap\" spacing={2}>\n                            <Grid item className={classes.iconContainer}>\n                                <Avatar className={classes.icon}>{announcement.name.charAt(0)}</Avatar>\n                            </Grid>\n                            <Grid item xs zeroMinWidth>\n                                <Grid className={classes.containerSpaceBetween}>\n                                    {/* <Grid xs={6}> */}\n                                        <Typography variant=\"body2\" className={classes.title}>{announcement.position}</Typography>\n                                    {/* </Grid>\n                                    <Grid xs={6}> */}\n                                        <Typography variant=\"body2\" className={classes.title}>{announcement.time}</Typography>\n                                    {/* </Grid> */}\n                                </Grid>\n                                <Grid>\n                                    <Typography variant=\"body2\" className={classes.name}>{announcement.name}</Typography>\n                                    <Typography variant=\"body2\" className={classes.message} noWrap>{announcement.message}</Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Grid>\n            )\n        )}\n        </div>\n    \n}\n\nexport default UpdatesList","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsLoader.js",["349","350"],"/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsTable.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/components/MapView.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/MapDetails.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/features/maps/MapDetails.js",[],["351","352"],"/Users/jonathanle/Desktop/wildfire-app/src/components/MapDisplay.js",["353"],"import React, { useEffect, useState } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MainContainer from '../components/MainContainer';\n// import PageTitle from '../components/PageTitle';\nimport MapView from './MapView';\n// import MapDetails from '../features/maps/MapDetails';\n// import MapDetails from './sub-pages/MapDetails';\nconst width = 250;\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        backgroundColor: theme.palette.secondary.light,\n        // width: '300px'\n        width: `calc(100% - ${width}px)`,\n        // height: theme.spacing(50)\n    }\n}));\n\nconst MapDisplay = () => {\n    const [api, setApi] = useState();\n    const [errorMessage, setErrorMessage] = useState({\n        message: false\n    });\n    const classes = useStyles();\n\n    useEffect(() => {\n        return fetch(`${process.env.PORT || 'http://localhost:8080'}/api/mapbox`)\n        .then(function(response) {\n            if (!response.ok) {\n                // console.log(response.statusText, \"first\")\n                setErrorMessage({message:response.statusText});\n            }\n            return response.json();\n        }).then(function(response) {\n            return response;\n        }).then(items => {\n            setApi(items);\n          }).catch(function(error) {\n            console.log('it didntttttt work from Maps API!')\n            setErrorMessage({message:error});\n        });\n        \n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n    // console.log(api, 'api')\n\n    return <>\n        <Grid item className={classes.container}> \n        {/* <div className={classes.container}> */}\n            {\n                api? <MapView \n                    // state={api}\n                    // uncomment to use API \n                    error={errorMessage}\n                /> : <Typography>loading...</Typography>\n            }\n        </Grid>\n        {/* </div> */}\n    </>\n}\n\nexport default MapDisplay",["354","355"],"/Users/jonathanle/Desktop/wildfire-app/src/app/store.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/components/PrimaryLinks.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/profile.js",["356","357","358","359","360"],"import React from 'react';\nimport MainContainer from '../components/MainContainer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, Grid, Typography } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport DetailsContainer from '../components/DetailsContainer';\nimport DetailsHeader from '../components/DetailsHeader';\nimport DetailsBlock from '../components/DetailsBlock';\nimport DetailsTable from '../components/DetailsTable';\nimport { getSelectedIncident } from '../app/reducers/incidents/incidentSlice';\n// import ReactDOM from 'react-dom';\nconst getDetailBlocks = () => {\n    // get user id \n    const blocks = [\n        {\n            title: 'General Information',\n            rows: [\n                {\n                    type: 'Organization',\n                    content: 'National Park Service',\n                },\n                {\n                    type: 'Serving Since',\n                    content: 'June 2004',\n                },\n                {\n                    type: 'Email',\n                    content: 'rebeccastrictland@nps.gov',\n                },\n                {\n                    type: 'Phone',\n                    content: '1-800-472-3000 EXT:4',\n                },\n            ]\n        }\n    ]\n\n    return blocks || [];\n}\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n        margin: theme.spacing(3,0)\n    },\n    profileDetails: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(3)\n    },\n    position: {\n        color: theme.palette.primary.light,\n    },\n    fullName: {\n        fontWeight: '500'\n    }\n}));  \n\n\n\nconst Profile = () => {\n    const profileDetails = getDetailBlocks();\n    // console.log(profileDetails)\n    const classes = useStyles();\n    const profileImg = require('./../images/profilePic.jpg');\n    const [ title, content ] = profileDetails;\n    // getSelectedIncident\n    // const selectedIncident = incidents.find((incident) => !incident._id.indexOf(selectedId));\n    // const selectedIncident = useSelector(getSelectedIncident);\n    // console.log(selectedIncident)\n    // const { geographics, incident } = selectedIncident; \n    // console.log(title, content)\n    return <MainContainer>\n        <Grid item md={6}>\n            <DetailsContainer>\n                <DetailsHeader header={`Profile Information`} />\n                <Grid container>\n                    <Avatar className={classes.avatar} src={profileImg.default} />\n                    <Grid className={classes.profileDetails}>\n                        <Grid>\n                            <Typography className={classes.position}>Position</Typography>\n                            <Typography className={classes.fullName}>Full Name</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                    {\n                        profileDetails.map((block, i) => <DetailsBlock key={i} title={block.title} detailRows={block.rows}/>)\n                    }\n            </DetailsContainer>\n        </Grid>\n        <Grid item md={6}>\n            <DetailsContainer>\n                <DetailsHeader header={`Incidents Reviewing`} />\n                <Typography variant='body2'>Neeeda get user's id to fetch incidents owned by user</Typography>\n                {/* <DetailsTable \n                    data={incident.cases} \n                    allowedKeys={[\"zip_code\", \"initial_time\", \"volume_traffic\"]}\n                    tableHeader={[\"Zip Code\", \"Initial Time\", \"Volume Traffic\"]}\n                    // Needa figure this out for the cell rows display to make it more reuseable \n                /> */}\n            </DetailsContainer>\n        </Grid>\n    </MainContainer>\n}\n\nexport default Profile","/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/weather.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/incidents.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/maps.js",[],["361","362"],"/Users/jonathanle/Desktop/wildfire-app/src/pages/login.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/updateDetails.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/updates.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/incidentDetails.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/app/reducers/logins/loginSlice.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/notFound.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/summary.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/pages/sub-pages/mapDetails.js",[],["363","364"],"/Users/jonathanle/Desktop/wildfire-app/src/features/maps/MapKey.js",["365"],"/Users/jonathanle/Desktop/wildfire-app/src/pages/dashboard.js",["366"],"import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport MainContainer from '../components/MainContainer';\nimport primaryLinks from '../components/PrimaryLinks';\nimport DashboardIncidents from '../features/dashboard/DashboardIncidents';\nimport DashboardMaps from '../features/dashboard/DashboardMaps';\nimport DashboardUpdates from '../features/dashboard/DashboardUpdates';\nimport DashboardWeather from '../features/dashboard/DashboardWeather';\n// import Maps from './Maps';\n\nconst Dashboard = () => {\n    // console.log(primaryLinks);\n    const links = primaryLinks()\n    const [ dashboard, incidents, updates, maps ] = links;\n    // console.log(incidents);\n    return <>\n        <MainContainer>\n            <Grid item md={7}>\n                <DashboardUpdates path={updates}/>\n                <DashboardMaps path={maps}/>\n            </Grid>\n            <Grid item md={5}>\n                <DashboardIncidents path={incidents}/>\n                <DashboardWeather/>\n            </Grid>\n        </MainContainer>\n    </>\n}\n\nexport default Dashboard;","/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/CaseDetails.js",["367"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport DetailsContainer from '../../components/DetailsContainer';\nimport DetailsBlock from '../../components/DetailsBlock';\nimport DetailsHeader from '../../components/DetailsHeader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from \"lodash\";\nimport {\n    selectIncident, getCaseDetailBlocks, select, selectCase, \n} from '../../app/reducers/incidents/incidentSlice'\nimport { Grid, IconButton, LinearProgress, Typography } from '@material-ui/core';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport { useHistory } from 'react-router-dom';\n// import Link from '@material-ui/core/Link';\nimport DetailsTitle from '../../components/DetailsTitle';\nimport CaseImageList from './CaseImageList';\nimport DetailsTextField from '../../components/DetailsTextField';\nimport DetailsSelect from '../../components/DetailsSelect';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport PrimaryButton from '../../components/PrimaryButton';\nimport labels from '../../app/detailStatusLabels';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: theme.spacing(10),\n    },\n    colorPrimary: {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n        backgroundColor: theme.palette.secondary.lighter\n    },\n}))(LinearProgress);\n\nconst useStyles = makeStyles((theme) => ({\n    headerContainer: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    iconContainer: {\n        height: theme.spacing(4.5),\n        width: theme.spacing(4.5),\n        margin: theme.spacing(0.75)\n    },\n    iconLink: {\n        color: theme.palette.secondary.dark\n    },\n    subtitle: {\n        fontWeight: '500',\n        paddingTop: theme.spacing(1.25),\n        paddingBottom: theme.spacing(0.75)\n    }\n}));\n\nconst CaseDetails = (props) => {\n    const classes = useStyles();\n    let [status, priority] = labels;\n    const { incidents } = props;\n    const isLoaded = !_.isEmpty(incidents);\n    const history = useHistory();\n    const [loading, setloading] = useState(isLoaded);\n    const { caseId } = useParams();\n    const { incidentId } = useParams();\n    const dispatch = useDispatch();\n    const selectedId = useSelector(selectIncident);\n    const detailBlocks = useSelector(getCaseDetailBlocks);\n\n\n    const selectedIncident = incidents.find((incident) => !incident._id.indexOf(selectedId));\n\n    useEffect(() => {\n        setloading(!isLoaded ? true : false);\n        if (!selectedId) {\n            dispatch(select(incidentId));\n        }\n        dispatch(selectCase(caseId));\n        // If hard refresh, dispatch a select incident id based on the URL params to keep in sync\n        // Self: If want to keep the tabs in sync use local storage to store data alternative to useEffect.\n    }, [selectedIncident, caseId, incidentId]);\n\n    if (!selectedIncident) { return null; }\n    // If the incident is not selected, return early to prevent re-renders\n\n    const { geographics, incident } = selectedIncident;\n     // To deconstruct the array for easier use\n    const [ casesInfo ] = detailBlocks;\n    const [ CaseInformation, CaseImages ] = casesInfo.caseDetails;\n\n    return <DetailsContainer query={!loading && isLoaded ? incident.status : ''}>\n        {\n            !loading ?\n                <>\n                    <Grid container className={classes.headerContainer}>\n                        <IconButton\n                            onClick={() => {\n                                history.goBack();\n                            }}\n                            className={classes.iconContainer} aria-label=\"backspace\">\n                            <NavigateBeforeIcon className={classes.iconLink} fontSize='small' />\n                        </IconButton>\n                        <div>\n                            <DetailsHeader header={`Zip Code: ${caseId}`} />\n                            <DetailsTitle title={`Incident: ${geographics.municipal}`} />\n                        </div>\n                    </Grid>\n                    <DetailsBlock title={CaseInformation.title} detailRows={CaseInformation.rows} />\n                    <DetailsBlock title={CaseImages.title}>\n                        <CaseImageList images={CaseImages.rows}/>\n                    </DetailsBlock>\n                    <DetailsBlock title={`Resource Assessment`}>\n                        <Typography className={classes.subtitle} variant={'body2'}>Valuable Assets</Typography>\n                        <DetailsTextField rows={4} info={''} label={`(e.g. natural resources, critical infrastructure, landmarks, etc...)`} />\n                        <Typography className={classes.subtitle} variant={'body2'}>Hazards Warning</Typography>\n                        <DetailsTextField rows={4} info={''} label={`(e.g. hazardous chemicals, fuel types, dangerous agents, etc...)`} />\n                    </DetailsBlock>\n                    <DetailsBlock title={`Additional Notes`}>\n                        <DetailsTextField rows={4} info={''} label={`List any additional information`} />\n                    </DetailsBlock>\n                    <DetailsBlock title={`Case Progress`}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <DetailsSelect label={'Status'} dataLabels={status.statuses} selected={incident.status} />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <DetailsSelect label={'Priority'} dataLabels={priority.priorities} selected={incident.priority} />\n                            </Grid>\n                            <PrimaryButton text={'Save Changes'}>\n                                <NavigateNextIcon />\n                            </PrimaryButton>\n                        </Grid>\n                    </DetailsBlock>\n                </>\n                :\n                <>\n                    <BorderLinearProgress variant=\"indeterminate\" />\n                </>\n        }\n\n    </DetailsContainer>\n}\n\nexport default CaseDetails;\n","/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsSelect.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/app/detailStatusLabels.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsTextField.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/components/DetailsForm.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/features/incidents/CaseImageList.js",["368"],"import { Grid, GridList, GridListTile } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n      },\n      gridList: {\n        width: '100%',\n        minHeight: 150,\n      },\n}));\n\nconst CaseImageList = (props) => {\n    const { images } = props;\n    const classes = useStyles();\n    return <div className={classes.root}>\n    <GridList cellHeight={160} className={classes.gridList} cols={3}>\n      {images.map((img, i) => (\n        <GridListTile key={i} cols={1}>\n          <img src={require(`./../../images/${img.img_src}`).default} alt={img.caption} />\n        </GridListTile>\n      ))}\n    </GridList>\n  </div>\n}\n\nexport default CaseImageList;","/Users/jonathanle/Desktop/wildfire-app/src/components/PrimaryButton.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/components/BrandLogo.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/images/svgs/loadingSVG.js",[],"/Users/jonathanle/Desktop/wildfire-app/src/images/svgs/incidentSVG.js",[],{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","replacedBy":"372"},{"ruleId":"373","severity":1,"message":"374","line":1,"column":10,"nodeType":"375","messageId":"376","endLine":1,"endColumn":16},{"ruleId":"373","severity":1,"message":"377","line":25,"column":11,"nodeType":"375","messageId":"376","endLine":25,"endColumn":19},{"ruleId":"373","severity":1,"message":"378","line":28,"column":36,"nodeType":"375","messageId":"376","endLine":28,"endColumn":43},{"ruleId":"369","replacedBy":"379"},{"ruleId":"371","replacedBy":"380"},{"ruleId":"373","severity":1,"message":"381","line":13,"column":8,"nodeType":"375","messageId":"376","endLine":13,"endColumn":9},{"ruleId":"369","replacedBy":"382"},{"ruleId":"371","replacedBy":"383"},{"ruleId":"369","replacedBy":"384"},{"ruleId":"371","replacedBy":"385"},{"ruleId":"369","replacedBy":"386"},{"ruleId":"371","replacedBy":"387"},{"ruleId":"369","replacedBy":"388"},{"ruleId":"371","replacedBy":"389"},{"ruleId":"369","replacedBy":"390"},{"ruleId":"371","replacedBy":"391"},{"ruleId":"373","severity":1,"message":"392","line":9,"column":44,"nodeType":"375","messageId":"376","endLine":9,"endColumn":54},{"ruleId":"393","severity":1,"message":"394","line":62,"column":6,"nodeType":"395","endLine":62,"endColumn":33,"suggestions":"396"},{"ruleId":"373","severity":1,"message":"397","line":98,"column":11,"nodeType":"375","messageId":"376","endLine":98,"endColumn":16},{"ruleId":"373","severity":1,"message":"398","line":76,"column":11,"nodeType":"375","messageId":"376","endLine":76,"endColumn":15},{"ruleId":"373","severity":1,"message":"399","line":47,"column":11,"nodeType":"375","messageId":"376","endLine":47,"endColumn":18},{"ruleId":"373","severity":1,"message":"398","line":48,"column":11,"nodeType":"375","messageId":"376","endLine":48,"endColumn":15},{"ruleId":"393","severity":1,"message":"400","line":67,"column":8,"nodeType":"395","endLine":67,"endColumn":38,"suggestions":"401"},{"ruleId":"373","severity":1,"message":"402","line":14,"column":13,"nodeType":"375","messageId":"376","endLine":14,"endColumn":22},{"ruleId":"373","severity":1,"message":"403","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":26},{"ruleId":"373","severity":1,"message":"404","line":6,"column":23,"nodeType":"375","messageId":"376","endLine":6,"endColumn":34},{"ruleId":"373","severity":1,"message":"405","line":10,"column":20,"nodeType":"375","messageId":"376","endLine":10,"endColumn":34},{"ruleId":"373","severity":1,"message":"406","line":10,"column":46,"nodeType":"375","messageId":"376","endLine":10,"endColumn":58},{"ruleId":"369","replacedBy":"407"},{"ruleId":"371","replacedBy":"408"},{"ruleId":"369","replacedBy":"409"},{"ruleId":"371","replacedBy":"410"},{"ruleId":"373","severity":1,"message":"411","line":12,"column":30,"nodeType":"375","messageId":"376","endLine":12,"endColumn":40},{"ruleId":"373","severity":1,"message":"412","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":20},{"ruleId":"369","replacedBy":"413"},{"ruleId":"371","replacedBy":"414"},{"ruleId":"373","severity":1,"message":"374","line":1,"column":10,"nodeType":"375","messageId":"376","endLine":1,"endColumn":16},{"ruleId":"373","severity":1,"message":"415","line":8,"column":18,"nodeType":"375","messageId":"376","endLine":8,"endColumn":28},{"ruleId":"373","severity":1,"message":"411","line":8,"column":30,"nodeType":"375","messageId":"376","endLine":8,"endColumn":40},{"ruleId":"373","severity":1,"message":"416","line":9,"column":8,"nodeType":"375","messageId":"376","endLine":9,"endColumn":12},{"ruleId":"373","severity":1,"message":"417","line":10,"column":8,"nodeType":"375","messageId":"376","endLine":10,"endColumn":24},{"ruleId":"373","severity":1,"message":"392","line":2,"column":10,"nodeType":"375","messageId":"376","endLine":2,"endColumn":20},{"ruleId":"373","severity":1,"message":"418","line":5,"column":7,"nodeType":"375","messageId":"376","endLine":5,"endColumn":27},{"ruleId":"369","replacedBy":"419"},{"ruleId":"371","replacedBy":"420"},{"ruleId":"373","severity":1,"message":"421","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":21},{"ruleId":"369","replacedBy":"422"},{"ruleId":"371","replacedBy":"423"},{"ruleId":"373","severity":1,"message":"424","line":5,"column":10,"nodeType":"375","messageId":"376","endLine":5,"endColumn":21},{"ruleId":"373","severity":1,"message":"425","line":9,"column":8,"nodeType":"375","messageId":"376","endLine":9,"endColumn":20},{"ruleId":"373","severity":1,"message":"426","line":10,"column":10,"nodeType":"375","messageId":"376","endLine":10,"endColumn":29},{"ruleId":"373","severity":1,"message":"427","line":67,"column":13,"nodeType":"375","messageId":"376","endLine":67,"endColumn":18},{"ruleId":"373","severity":1,"message":"428","line":67,"column":20,"nodeType":"375","messageId":"376","endLine":67,"endColumn":27},{"ruleId":"369","replacedBy":"429"},{"ruleId":"371","replacedBy":"430"},{"ruleId":"369","replacedBy":"431"},{"ruleId":"371","replacedBy":"432"},{"ruleId":"373","severity":1,"message":"433","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":29},{"ruleId":"373","severity":1,"message":"402","line":14,"column":13,"nodeType":"375","messageId":"376","endLine":14,"endColumn":22},{"ruleId":"393","severity":1,"message":"434","line":80,"column":8,"nodeType":"395","endLine":80,"endColumn":46,"suggestions":"435"},{"ruleId":"373","severity":1,"message":"436","line":1,"column":10,"nodeType":"375","messageId":"376","endLine":1,"endColumn":14},"no-native-reassign",["437"],"no-negated-in-lhs",["438"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'summary' is assigned a value but never used.",["437"],["438"],"'_' is defined but never used.",["437"],["438"],["437"],["438"],["437"],["438"],["437"],["438"],["437"],["438"],"'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["439"],"'cases' is assigned a value but never used.","'path' is assigned a value but never used.","'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'incidentId', and 'isLoaded'. Either include them or remove the dependency array.",["440"],"'dashboard' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'fetchIncidents' is defined but never used.","'refreshState' is defined but never used.",["437"],["438"],["437"],["438"],"'withRouter' is defined but never used.","'DetailsBlock' is defined but never used.",["437"],["438"],"'RouterLink' is defined but never used.","'Link' is defined but never used.","'ChevronRightIcon' is defined but never used.","'BorderLinearProgress' is assigned a value but never used.",["437"],["438"],"'MainContainer' is defined but never used.",["437"],["438"],"'useSelector' is defined but never used.","'DetailsTable' is defined but never used.","'getSelectedIncident' is defined but never used.","'title' is assigned a value but never used.","'content' is assigned a value but never used.",["437"],["438"],["437"],["438"],"'FiberManualRecordIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'isLoaded', and 'selectedId'. Either include them or remove the dependency array.",["441"],"'Grid' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},"Update the dependencies array to be: [loginsList, incidentsList, dispatch]",{"range":"448","text":"449"},"Update the dependencies array to be: [dispatch, incidentId, isLoaded, selectedId, selectedIncident]",{"range":"450","text":"451"},"Update the dependencies array to be: [selectedIncident, caseId, incidentId, isLoaded, selectedId, dispatch]",{"range":"452","text":"453"},[1666,1693],"[loginsList, incidentsList, dispatch]",[2634,2664],"[dispatch, incidentId, isLoaded, selectedId, selectedIncident]",[2975,3013],"[selectedIncident, caseId, incidentId, isLoaded, selectedId, dispatch]"]