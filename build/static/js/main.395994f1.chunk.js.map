{"version":3,"sources":["images/IRlogo.svg","images/IRlogowhite.svg","images/profilePic.jpg","images/widebg.png","images/caseslogo.svg","images/currentLocation.svg","images/datapoints.svg","images/derickkabbeko.jpg","images/fireExample1.jpg","images/fireExample2.jpg","images/fireExample3.jpg","images/incidentlogo.svg","images/irbg-01.png","images/janedoe.jpg","images/loading.svg","images/williamstagner.jpg","app/reducers/incidents/incidentSlice.js","components/MainContainer.js","components/PrimaryLinks.js","components/DetailsTitle.js","components/DetailsContent.js","components/DetailsBlock.js","components/DetailsCaption.js","components/DetailsContainer.js","components/DetailsHeader.js","components/DetailsTable.js","features/dashboard/DashboardIncidents.js","components/MapView.js","components/MapDisplay.js","features/maps/MapKey.js","features/dashboard/DashboardMaps.js","components/LoadingBar.js","features/dashboard/DashboardUpdates.js","features/dashboard/DashboardWeather.js","app/getDateTime.js","app/reducers/updates/updateSlice.js","app/reducers/profiles/profilesSlice.js","pages/dashboard.js","app/detailStatusLabels.js","features/incidents/IncidentItem.js","features/incidents/IncidentFilterList.js","features/incidents/IncidentListLabels.js","features/incidents/IncidentListCategories.js","features/incidents/IncidentList.js","components/PrimaryButton.js","app/reducers/incidents/middleware/updateIncident.js","features/incidents/IncidentFormFields.js","features/incidents/IncidentDetails.js","features/incidents/CaseImageList.js","features/incidents/CaseFormFields.js","features/incidents/CaseDetails.js","pages/incidents.js","app/reducers/logins/loginSlice.js","components/BrandLogo.js","app/reducers/logins/middleware/verifyLoginInfo.js","pages/login.js","features/maps/MapDetails.js","pages/maps.js","pages/profile.js","pages/summary.js","components/UserBlock.js","features/updates/UpdateDetails.js","features/updates/UpdatesItem.js","app/reducers/updates/middleware/mergeUpdatesData.js","features/updates/UpdatesList.js","pages/updates.js","app/routes.js","components/DrawerNav.js","components/ProfileNav.js","components/PageTitle.js","components/Navigation.js","pages/errorPage.js","App.js","app/rootReducer.js","app/store.js","index.js","images/svgs/loadingSVG.js","images sync /^/.//.*$","images/svgs/incidentSVG.js","images/svgs/updateSVG.js"],"names":["fetchIncidents","createAsyncThunk","a","response","fetch","process","PORT","then","ok","json","statusText","incidentSlice","createSlice","name","initialState","meta","status","errorLog","error","message","errorCode","data","selectedIncidentId","incidentList","selectedCaseId","reducers","select","state","payload","selectCase","updateList","extraReducers","pending","fulfilled","action","rejected","actions","selectIncident","incidents","listIncidents","getSelectedCase","selectedId","selectedIncident","find","incident","_id","indexOf","caseList","cases","caseId","selectCaseId","zip_code","getIncidentDetailBlocks","geographics","incidentDetails","title","rows","type","content","municipal","region","substr","length","time_stamp","time_zone","zip_codes","map","zip","volume_traffic","api_keywords","keyword","property","wildfire_type","priority","getCaseDetailBlocks","caseDetails","initial_time","authorities_present","images","useStyles","makeStyles","theme","root","width","marginLeft","marginTop","spacing","padding","minHeight","backgroundColor","palette","secondary","light","Layout","props","classes","className","Grid","container","children","primaryLinks","routes","filter","route","menu","fontWeight","color","primary","paddingBottom","DetailsTitle","Typography","variant","align","main","flexGrow","flexBasis","display","flexDirection","justifyContent","DetailsContent","item","ItemContainer","margin","ItemHover","lighter","DetailsBlock","detailRows","hover","row","i","caption","DetailsCaption","boxShadow","openLabel","borderTop","borderColor","warning","reviewingLabel","info","mustResolveLabel","resolvedLabel","success","standardLabel","DetailsContainer","query","labelColorSwitch","header","darker","DetailsHeader","table","minWidth","maxWidth","cellRow","textDecoration","cellHead","box","whiteSpace","tableRow","DetailsTable","param","linkAccessors","pathUrl","path","tableHeader","_","pick","allowedKeys","renderColumns","Object","keys","column","TableCell","Link","component","RouterLink","to","Box","overflow","textOverflow","tableRows","TableRow","TableContainer","Table","aria-label","TableHead","TableBody","link","dark","DashboardIncidents","useSelector","formattedIncidents","button","Divider","mapboxgl","require","mapContainer","height","MapView","mapContainerRef","useRef","useEffect","accessToken","token","Map","current","style","center","zoom","addControl","NavigationControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","remove","ref","MapDisplay","useState","api","setApi","errorMessage","setErrorMessage","items","catch","console","log","currentLocation","dataPoints","topic","icon","paddingTop","paddingRight","CurrentLocationIcon","xmlns","data-name","viewBox","cx","cy","r","fill","CasesIcon","x","y","enableBackground","version","xmlSpace","stroke","strokeMiterlimit","strokeWidth","d","IncidentsIcon","DatapointsIcon","MapKey","listData","listItem","xs","details","paddingLeft","DashboardMaps","BorderLinearProgress","withStyles","colorPrimary","grey","bar","LinearProgress","LoadingBar","maxHeight","alignItems","iconContainer","marginBottom","containerSpaceBetween","rowLink","DashboardUpdates","updatesData","profilesData","updatesInfo","update","profileId","general","userId","getProfileData","profile","information","profileData","updates","wrap","Avatar","src","img_src","default","zeroMinWidth","position","timestamp","fullname","noWrap","incidentArea","textAlign","weatherIcon","fontSize","temperature","textBold","weatherInfo","WeatherData","DashboardWeather","md","getDateTime","date","Date","getMonth","getDate","getDay","getFullYear","getYear","fetchUpdates","updatesSlice","selectedUpdateId","updatesList","selectUpdate","getUpdateId","listUpdates","getSelectedUpdate","getUpdatesDetailBlocks","selectedUpdate","updateDetails","time","incidentUpdate","fetchProfiles","profilesSlice","selectedProfileId","profilesList","listProfiles","loadingContainer","Dashboard","links","maps","incidentsData","MainContainer","isEmpty","labels","statuses","uid","label","priorities","reviews","itemContent","textTransform","borderRadius","borderLeft","inactive","darkish","active","IncidentItem","useRouteMatch","dispatch","useDispatch","Button","data-id","onClick","e","event","currentTarget","dataset","id","IncidentFilterList","filteredList","toLowerCase","filterQuery","itemRow","IncidentListLabels","keyLabels","headerRow","text","openIcon","transform","transition","transitions","closeIcon","IncidentListCategories","toggleShow","setToggleShow","KeyboardArrowUp","prevState","IncidentList","saveButton","PrimaryButton","handler","fullWidth","disableElevation","updateIncident","values","additional_notes","updateValues","textFieldContainer","textField","selectGroup","IncidentFormFields","formContent","setFormContent","initialValues","onSubmit","updatedIncidentList","submitFormData","enableReinitialize","handleSubmit","TextField","multiline","value","onChange","handleChange","touched","Boolean","errors","helperText","FormControl","formControl","InputLabel","htmlFor","Select","native","inputProps","disabled","IncidentDetails","url","isLoaded","loading","setloading","incidentId","useParams","detailBlocks","useLayoutEffect","incidentInfo","IncidentInformation","AreasAffected","flexWrap","background","paper","gridList","CaseImageList","GridList","cellHeight","cols","img","GridListTile","alt","CaseFormFields","reviewed","valuable_assets","hazard_warnings","alert","JSON","stringify","headerContainer","iconLink","subtitle","CaseDetails","history","useHistory","selectedCase","casesInfo","CaseInformation","CaseImages","IconButton","goBack","Incidents","location","useLocation","incidentsList","pathname","exact","fetchLogins","loginSlice","isLoggedIn","loginList","login","logout","listLogins","verifyLogin","checkLoginStatus","logo","logoContainer","BrandLogo","darkMode","verifyLoginInfo","logins","email","password","emailCheck","credientials","loginInfo","backgroundRepeat","backgroundSize","loginColumn","loginContainer","infoContainer","inputsContainer","subTitle","validationSchema","yup","required","min","Login","setError","isLoading","setLoading","formik","useFormik","setTimeout","imageColumn","Alert","severity","MapDetails","Maps","Profile","profileDetails","block","Summary","avatar","fullName","UserBlock","profileImg","UpdateDetails","profiles","updateId","updateDetailBlocks","updateTime","updateInformation","updateProfileId","filterProfile","UpdatesItem","mergeUpdatesData","UpdatesList","Fragment","Updates","private_url","subPages","drawer","flexShrink","drawerPaper","drawerItem","drawerItemActive","brandLogo","dividerLight","navList","textCenter","withRouter","drawerItems","Drawer","anchor","List","activeClassName","ListItem","disableRipple","ProfileNav","SecondaryLinks","React","anchorEl","setAnchorEl","open","aria-controls","aria-haspopup","Menu","keepMounted","onClose","PaperProps","ITEM_HEIGHT","MenuItem","PageTitle","drawerWidth","toolbar","appbar","alignContent","summaryButton","LocationTitle","assign","match","locationInfo","CssBaseline","AppBar","Toolbar","orientation","flexItem","ErrorPage","createMuiTheme","typography","fontFamily","join","useNextVariants","App","batch","rootReducer","combineReducers","incidentReducer","loginReducer","updateReducer","profileReducer","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById","LoadingSVG","preserveAspectRatio","attributeName","begin","calcMode","dur","keyTimes","repeatCount","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports","IncidentSVG","rx","ry","UpdateSVG"],"mappings":"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","file":"static/js/main.395994f1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/IRlogo.b557a5dc.svg\";","export default __webpack_public_path__ + \"static/media/IRlogowhite.b779066d.svg\";","export default __webpack_public_path__ + \"static/media/profilePic.a687a3ff.jpg\";","export default __webpack_public_path__ + \"static/media/widebg.c8c8c866.png\";","export default __webpack_public_path__ + \"static/media/caseslogo.c40f9bd0.svg\";","export default __webpack_public_path__ + \"static/media/currentLocation.f748cdb3.svg\";","export default __webpack_public_path__ + \"static/media/datapoints.be1983e3.svg\";","export default __webpack_public_path__ + \"static/media/derickkabbeko.ec0da393.jpg\";","export default __webpack_public_path__ + \"static/media/fireExample1.72f498e6.jpg\";","export default __webpack_public_path__ + \"static/media/fireExample2.a63715b8.jpg\";","export default __webpack_public_path__ + \"static/media/fireExample3.bb814868.jpg\";","export default __webpack_public_path__ + \"static/media/incidentlogo.d4d0f883.svg\";","export default __webpack_public_path__ + \"static/media/irbg-01.f0ae60ee.png\";","export default __webpack_public_path__ + \"static/media/janedoe.537868d5.jpg\";","export default __webpack_public_path__ + \"static/media/loading.038ac1d5.svg\";","export default __webpack_public_path__ + \"static/media/williamstagner.a687a3ff.jpg\";","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import CaseDetails from '../../../features/incidents/CaseDetails';\n\nexport const fetchIncidents = createAsyncThunk('incidents/fetchIncidents', async () => {\n    const response = fetch(`${process.env.PORT || 'http://localhost:8080'}/incidents/get-incidents-db`)\n    // downloaded a fetch polyfill \n    .then(function(response) {\n        if (!response.ok) {\n            return response.statusText\n        }\n        return response.json();\n    })\n    return response\n});\n\nexport const incidentSlice = createSlice({\n    name: 'incident',\n    initialState: {\n        meta: {\n            status: 'idle',\n            fetch: true,\n            errorLog: {\n                error: false,\n                message: '',\n                errorCode: '',\n            }\n        },\n        data: {\n            selectedIncidentId: '',\n            incidentList: [],\n            selectedCaseId: '',\n        }\n    },\n    reducers:{\n        select: (state, {payload}) => {\n            state.data.selectedIncidentId = payload;\n        },\n        selectCase: (state, {payload}) => {\n            state.data.selectedCaseId = payload;\n        },\n        updateList: (state, {payload}) => {\n            state.data.incidentList = payload;\n        },\n    },\n    extraReducers: {\n        [fetchIncidents.pending]: (state) => {\n            state.meta.status = 'loading';\n        },\n        [fetchIncidents.fulfilled]: (state, action) => {\n            state.meta.status = 'success';\n            state.data.incidentList = action.payload;\n            // Need to figure out how to go about refreshing data \n        },\n        [fetchIncidents.rejected]: (state, action) => {\n            state.meta.status = 'failed';\n            state.meta.error = action.error.message\n            // state.data.incidentList = payload;\n        },\n    },\n});\n\nexport const { select, selectCase, updateList } = incidentSlice.actions;\n\nexport const selectIncident = state => state.incidents.data.selectedIncidentId;\nexport const selectCaseId = state => state.incidents.data.selectedCaseId;\nexport const listIncidents = state => state.incidents.data.incidentList;\nexport const errorLog = state => state.incidents.meta.errorLog;\nexport const refreshState = state => state.incidents.meta.refresh;\n// For getting the value of the current state throughout the app;\n\n// Formatter Function for preparing selectedIncident Data for DetailsBlock\n// This moves the responsibility out of the component, and into the reducer.\n// Transformation and formatting of data makes more sense in reducer middleware than the React component. (seg: Smart vs Dumb components)\n\n// export const selectedIncident = incidents.find((incident) => !incident._id.indexOf(selectedId));\nexport const getSelectedIncident = (state) => state.incidents.data.incidentList.find((incident) => !incident._id.indexOf(selectIncident));\nexport const getSelectedCase = (state) => {\n    const selectedId = selectIncident(state);\n    const incidentList = listIncidents(state);\n    const selectedIncident = incidentList.find((incident) => !incident._id.indexOf(selectedId));\n\n    if (!selectedIncident) { return {}; }\n\n    const caseList = selectedIncident.incident.cases\n    const caseId = selectCaseId(state);\n    const selectedCase = caseList.find((cases)=> !cases.zip_code.indexOf(caseId));\n\n    return selectedCase;\n}\n\nexport const getIncidentDetailBlocks = (state) => {\n    const selectedId = selectIncident(state); // Reusing selectors above\n    const incidentList = listIncidents(state); // Reusing selectors above\n    const selectedIncident = incidentList.find((incident) => !incident._id.indexOf(selectedId));\n\n    if (!selectedIncident) { return {}; }\n    // console.log(selectedIncident, 'iuncident')\n    const { geographics, incident } = selectedIncident;\n    // const cases = getSelectedCase(state);\n    // console.log(cases)\n\n    // Set up the data representation of our detail blocks.\n    // This keeps the data formatting responsibility separate from presentational components.\n    // We can break this down further if we wanted to with each \"block\" having its own formatter function outputting the correct object structure, then adding it to the array.\n    const blocks =  [\n        {\n            incidentDetails: [\n                {\n                    title: 'Incident Information',\n                    rows:  [\n                        { type: 'Incident', content: geographics.municipal },\n                        { type: 'State', content: geographics.state }, \n                        { type: 'Region', content: geographics.region }, \n                        { type: 'ID', content: selectedIncident._id.substr(selectedId.length - 5) }, \n                        { type: 'Initial Time', content: `${geographics.time_stamp} ${geographics.time_zone} `}, \n                        { type: 'Zipcodes Affected', content: incident.zip_codes.map(zip => `${zip}, `) }\n                    ] \n                },\n                {\n                    title: 'Areas Affected',\n                    rows:  [\n                        { type: 'Volume Traffic', content: incident.volume_traffic },\n                        { type: 'Api Keywords', content: incident.api_keywords.map(keyword => `${keyword}, `)},\n                        { type: 'Property', content: incident.property.map(property => `${property}, `) },\n                        { type: 'Wildfire Type', content: incident.wildfire_type },\n                        { type: 'Priority', content: incident.priority },\n                    ] \n                },\n            ]\n        },\n    ];\n\n    return blocks || [];\n};\n\nexport const getCaseDetailBlocks = (state) => {\n    const selectedId = selectIncident(state); // Reusing selectors above\n    const incidentList = listIncidents(state); // Reusing selectors above\n    const selectedIncident = incidentList.find((incident) => !incident._id.indexOf(selectedId));\n    const cases = getSelectedCase(state);\n\n    if (!selectedIncident && cases) { return {}; }\n    const { geographics, incident } = selectedIncident;\n\n    const blocks =  [\n        {\n            caseDetails: [\n                {\n                    title: 'Case Information',\n                    rows:  [\n                        { type: 'Incident', content: geographics.municipal },\n                        { type: 'State', content: geographics.state }, \n                        { type: 'Region', content: geographics.region }, \n                        { type: 'ID', content: selectedIncident._id.substr(selectedId.length - 5) }, \n                        { type: 'Initial Time', content: `${cases.initial_time} ${geographics.time_zone} `}, \n                        { type: 'Api Keywords', content: incident.api_keywords.map(keyword => `${keyword} ,`)},\n                        { type: 'Authorities Present', content: cases.authorities_present}\n                    ]\n                },\n                {\n                    title: 'Images',\n                    rows: cases.images\n                },\n            ]\n        }\n    ];\n    return blocks || [];\n}\nexport default incidentSlice.reducer;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nconst drawerWidth = 100;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        marginTop: theme.spacing(5),\n        padding: theme.spacing(6),\n        minHeight: '100vh',\n        backgroundColor: theme.palette.secondary.light\n    },\n}));\n\nconst Layout = (props) => {\n    const classes = useStyles();\n    return <div className={classes.root}>\n        <Grid container>\n            {props.children}\n        </Grid>\n    </div>\n}\n\nexport default Layout","\nimport routes from './../app/routes';\n\nconst primaryLinks = () => routes.filter((route) => route.menu === 'PRIMARY');\n\nexport default primaryLinks","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        fontWeight: '600',\n        color: theme.palette.primary.light,\n        paddingBottom: theme.spacing(1) \n    }\n}));\n\nconst DetailsTitle = (props) => {\n    const classes = useStyles();\n    return <Typography variant=\"body2\" className={classes.title} align={props.align || 'inherit'}>\n        {props.title}\n    </Typography>\n}\n\nexport default DetailsTitle;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    type: {\n        color: theme.palette.primary.main,\n        fontWeight: '500',\n        flexGrow: 1,\n        flexBasis: 0,\n    },\n    content: {\n        color: theme.palette.primary.light,\n        flexGrow: 2,\n        flexBasis: 0,\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n    }\n}));\n\nconst DetailsContent = (props) => {\n    // console.log(props.loading)\n    const classes = useStyles();\n    return <>\n        <Grid className={classes.container} item>\n            {props.type ? \n            <Typography variant=\"body2\" className={classes.type}>{props.type}: </Typography>\n            : null }\n            <Typography variant=\"body2\" className={classes.content}>{props.content}</Typography>\n        </Grid>\n    </>\n}\n\nexport default DetailsContent\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport DetailsTitle from './DetailsTitle';\nimport DetailsContent from './DetailsContent';\n\nconst useStyles = makeStyles((theme) => ({\n    ItemContainer: {\n        backgroundColor: theme.palette.secondary.light,\n        padding: theme.spacing(2,2.5),\n        margin: theme.spacing(1.25,0)\n    },\n    ItemHover: {\n        '&:hover, &:focus': {\n            backgroundColor: theme.palette.secondary.lighter,\n        },\n    }\n}));  \n\nconst DetailsBlock = (props) => {\n    const { children, title, detailRows, hover } = props;\n    const classes = useStyles();\n    return <Grid item className={`${classes.ItemContainer} ${hover? classes.ItemHover : ``}`}>\n        { title ? <DetailsTitle title={title}/> : <></>}\n        {/* If the detailRows prop is populated, map over an array of objects. \n        Otherwise, pass children as-is. */}\n        {detailRows ? detailRows.map((row, i) => <DetailsContent key={i} type={row.type} content={row.content} />) : <></>}\n        {children? children : <></>}\n    </Grid>\n}\n\nexport default DetailsBlock\n","import { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    caption: {\n        color: theme.palette.primary.light,\n        paddingBottom: theme.spacing(1.25)\n    }\n}));\n\nconst DetailsCaption = (props) => {\n    const classes = useStyles();\n    return <>  \n        <Typography variant=\"body2\" className={classes.caption}>{props.caption}</Typography>\n    </>\n}\n\nexport default DetailsCaption;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        margin: theme.spacing(2.5,1.5),\n        padding: theme.spacing(2,3),\n        backgroundColor: theme.palette.secondary.lighter,\n        boxShadow: '0px 0px 10px #dbdbdb',\n    },\n    openLabel: {\n        borderTop: '4px solid',\n        borderColor: theme.palette.warning.light\n    },\n    reviewingLabel: {\n        borderTop: '4px solid',\n        borderColor: theme.palette.info.light\n    },\n    mustResolveLabel: {\n        borderTop: '4px solid',\n        borderColor: theme.palette.error.light\n    },\n    resolvedLabel: {\n        borderTop: '4px solid',\n        borderColor: theme.palette.success.light\n    },\n    standardLabel: {\n        borderColor: theme.palette.secondary.light\n    }\n}));  \n\nconst DetailsContainer = (props) => {\n    const labelColorSwitch = (query) => {\n        switch (query) {\n            case \"Open\": return classes.openLabel;\n            case \"Reviewing\": return classes.reviewingLabel;\n            case \"Must Resolve\": return classes.mustResolveLabel;\n            case \"Resolved\": return classes.resolvedLabel;\n            default: return classes.standardLabel\n        }\n    }\n    const classes = useStyles();\n    return <Grid className={`${classes.container} ${labelColorSwitch(props.query)}`}>\n        {props.children}\n    </Grid>\n}\n\nexport default DetailsContainer;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        fontWeight: '600',\n        color: theme.palette.primary.darker,\n        paddingBottom: theme.spacing(0.75) \n    }\n}));  \n\nconst DetailsHeader = (props) => {\n    const classes = useStyles();\n    return <Typography className={classes.header} align={props.align || 'inherit'}>\n        {props.header}\n    </Typography>\n}\n\nexport default DetailsHeader;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Link as RouterLink} from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport _ from \"lodash\";\nimport { Box } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 400,\n        maxWidth: 500,\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.lighter,\n    },\n    cellRow: {\n        padding: theme.spacing(1,2),\n        textDecoration: 'underline',\n    },\n    cellHead: {\n        color: theme.palette.primary.light,\n        padding: theme.spacing(1,2),\n    },\n    box: {\n        width: '100px',\n        whiteSpace: 'nowrap'\n    },\n    caption: {\n        '& .MuiTable-root caption': {\n            padding: theme.spacing(0),\n        },\n    },\n    tableRow: {\n        '&:hover, &:focus': {\n            backgroundColor: theme.palette.secondary.light,\n        },\n    }\n}));\n\nconst DetailsTable = (props) => {\n    const param = props.linkAccessors;\n    const pathUrl = props.path\n    const classes = useStyles();\n    const header = props.tableHeader\n\n    const rows = props.data.map((data)=> _.pick(data, props.allowedKeys));\n\n    const renderColumns = row => {\n        const columnAccessors = Object.keys(row);\n        // This uses the object keys to iterate through the columns per row.\n        return columnAccessors.map((column, i) => {\n            return <TableCell key={i} align=\"left\" className={classes.cellRow}>\n                {\n                    param && pathUrl? <Link component={RouterLink} to={`${pathUrl}/${row[param]}`}>\n                        <Box className={classes.box} component=\"div\" overflow=\"hidden\" textOverflow=\"ellipsis\">{row[column]}</Box>\n                        </Link> : <>{row[column]}</>\n                }\n            </TableCell>\n            // Accessing the data row using the column's object property through columnAccessors.\n        })\n    };\n    const tableRows = rows.map((row, i) => {\n        return <TableRow className={classes.tableRow} key={i}>{renderColumns(row)}</TableRow>\n        // Entries of the table row\n    });\n\n    return (\n        <TableContainer>\n            <Table className={classes.table} aria-label=\"caption table\">\n                <caption className={classes.caption}>Information regarding Incidents</caption>\n                <TableHead>\n                    <TableRow>\n                        {\n                            header.map((header)=> (\n                                <TableCell key={header} className={classes.cellHead}>{header}</TableCell>\n                            ))\n                        }\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {tableRows}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\nexport default DetailsTable;\n","import { Divider, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DetailsBlock from '../../components/DetailsBlock';\nimport DetailsCaption from '../../components/DetailsCaption';\nimport DetailsContainer from '../../components/DetailsContainer';\nimport DetailsHeader from '../../components/DetailsHeader';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport DetailsTable from '../../components/DetailsTable';\n// import _ from \"lodash\";/\nimport {\n    listIncidents\n} from '../../app/reducers/incidents/incidentSlice'\n\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        color: theme.palette.secondary.dark\n    }\n}));\n\n\nconst DashboardIncidents = (props) => {\n    const classes = useStyles();\n    const incidentList = useSelector(listIncidents);\n    if (!incidentList) return\n\n    const openIncidentsList = incidentList.filter(incident => incident.incident.status === \"Open\")\n    const formattedIncidents = openIncidentsList.map((data)=> {\n        const { _id } = data;\n        return {_id,...data.incident, ...data.geographics}\n    });\n\n    return <>\n        <DetailsContainer>\n            <Grid container>\n                <DetailsHeader header={`Incidents`} />\n                <Link className={classes.link} button=\"true\" component={RouterLink} to={props.path.path}>\n                    <ChevronRightIcon />\n                </Link>\n            </Grid>\n            <DetailsCaption caption={`Information regarding on-going incidents based on the current and or designated location`} />\n            <Divider />\n            <DetailsBlock>\n                <DetailsTable \n                    data={formattedIncidents} \n                    linkAccessors={\"_id\"}\n                    path={'/incidents'}\n                    allowedKeys={[\"municipal\", \"priority\", \"status\", \"volume_traffic\", \"_id\"]}\n                    tableHeader={[\"Municipal\", \"Priority\", \"Status\", \"Volume\", \"Id\"]}\n                />\n            </DetailsBlock>\n        </DetailsContainer>\n    </>\n}\n\nexport default DashboardIncidents;","import React, { useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Grid, Typography } from '@material-ui/core';\nconst mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\n\nconst useStyles = makeStyles((theme) => ({\n    mapContainer: {\n        width: '100%',\n        height: theme.spacing(50),\n        backgroundColor: theme.palette.secondary.light,\n        // margin: theme.spacing(0),\n    }\n}));\n\nconst MapView = (props) => {\n    const classes = useStyles();\n    const mapContainerRef = useRef(null);\n    useEffect(() => {\n        if (props.state) {\n            mapboxgl.accessToken = props.state.token;\n            // console.log(props.state.token)\n            const map = new mapboxgl.Map({\n                container: mapContainerRef.current,\n                // See style options here: https://docs.mapbox.com/api/maps/#styles\n                style: 'mapbox://styles/mapbox/streets-v11',\n                center: [-75.1689107, 39.9545261],\n                zoom: 12.5,\n            });\n            // add navigation control (the +/- zoom buttons)\n            map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n            // the locate user\n            map.addControl(\n                new mapboxgl.GeolocateControl({\n                    positionOptions: {\n                        enableHighAccuracy: true\n                    },\n                    trackUserLocation: true\n                })\n            );\n            // clean up on unmount\n            return () => map.remove();\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n    return <div className={classes.mapContainer} ref={mapContainerRef} />\n}\n\n// const Results = (props) => {\n//     const classes = useStyles();\n//     if (props.state && !props.error.message) {\n//         return <div className={classes.mapContainer} ref={props.references}/>;\n//     } else if (!props.state && props.error.message) {\n//         return <Typography>{props.error.message.message}</Typography>;\n//     } else {\n//         return <Typography>Loading...</Typography>;\n\n//     }\n// }\n\nexport default MapView;","import React, { useEffect, useState } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n// import MainContainer from '../components/MainContainer';\n// import PageTitle from '../components/PageTitle';\nimport MapView from './MapView';\n// import MapDetails from '../features/maps/MapDetails';\n// import MapDetails from './sub-pages/MapDetails';\nconst width = 250;\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        backgroundColor: theme.palette.secondary.light,\n        // width: '300px'\n        width: `calc(100% - ${width}px)`,\n        // height: theme.spacing(50)\n    }\n}));\n\nconst MapDisplay = () => {\n    const [api, setApi] = useState();\n    const [errorMessage, setErrorMessage] = useState({\n        message: false\n    });\n    const classes = useStyles();\n\n    useEffect(() => {\n        return fetch(`${process.env.PORT || 'http://localhost:8080'}/api/mapbox`)\n        .then(function(response) {\n            if (!response.ok) {\n                // console.log(response.statusText, \"first\")\n                setErrorMessage({message:response.statusText});\n            }\n            return response.json();\n        }).then(function(response) {\n            return response;\n        }).then(items => {\n            setApi(items);\n          }).catch(function(error) {\n            console.log('it didntttttt work from Maps API!')\n            setErrorMessage({message:error});\n        });\n        \n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n    // console.log(api, 'api')\n\n    return <>\n        <Grid item className={classes.container}> \n        {/* <div className={classes.container}> */}\n            {\n                api? <MapView \n                    // state={api}\n                    // uncomment to use API \n                    error={errorMessage}\n                /> : <Typography>loading...</Typography>\n            }\n        </Grid>\n        {/* </div> */}\n    </>\n}\n\nexport default MapDisplay","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\n// import FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport DetailsTitle from '../../components/DetailsTitle';\n\nconst useStyles = makeStyles((theme) => ({\n    currentLocation: {\n        color: theme.palette.info.main\n    },\n    incidents: {\n        color: theme.palette.error.main\n    },\n    cases: {\n        color: theme.palette.warning.main\n    },\n    dataPoints: {\n        color: '#ffdd00'\n    },\n    topic: {\n        fontWeight: '500'\n    },\n    caption: {\n        color: theme.palette.primary.light\n    },\n    icon: {\n        paddingTop: theme.spacing(1),\n        paddingRight: theme.spacing(2.5)\n    },\n    row: {\n        padding: theme.spacing(0.5, 0)\n    },\n    title: {\n        paddingTop: theme.spacing(0.75)\n    }\n}));\n\n\nconst MapKey = () => {\n    const classes = useStyles();\n    const listData = [\n        {\n            icon: <CurrentLocationIcon />,\n            topic: 'Current Location',\n            caption: ''\n        },\n        {\n            icon: <IncidentsIcon />,\n            topic: 'Known Incidents',\n            caption: 'Areas affected based on county and or city'\n        },\n        {\n            icon: <CasesIcon />,\n            topic: 'Known Case(s)',\n            caption: 'Areas affected based on zip code'\n        },\n        {\n            icon: <DatapointsIcon />,\n            topic: 'Receiving Data Point(s)',\n            caption: 'Number based on the number of reported incidents'\n        },\n\n    ]\n    return <>\n        <div className={classes.title}>\n            <DetailsTitle title={`Map Key`} />\n        </div>\n        {\n            listData.map((listItem, i) => {\n                return <Grid key={i} container className={classes.row}>\n                    <Grid item xs={2}>\n                        <div className={classes.icon}>\n                        {\n                            listItem.icon\n                        }\n                        </div>\n                    </Grid>\n                    <Grid item xs={10}>\n                        <Typography variant={'body2'} className={classes.topic}>{listItem.topic}</Typography>\n                        <Typography variant={'body2'} className={classes.caption}>{listItem.caption}</Typography>\n                    </Grid>\n                </Grid>\n            })\n        }\n    </>\n}\nconst CurrentLocationIcon = () => {\n    return <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-name=\"Layer 1\"\n        viewBox=\"0 0 300 300\"\n    >\n        <circle cx=\"150\" cy=\"150\" r=\"150\" fill=\"#2196f3\"></circle>\n    </svg>\n}\nconst CasesIcon = () => {\n    return <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0\"\n        y=\"0\"\n        enableBackground=\"new 0 0 300.3 300.3\"\n        version=\"1.1\"\n        viewBox=\"0 0 300.3 300.3\"\n        xmlSpace=\"preserve\"\n    >\n        <path\n            fill=\"none\"\n            stroke=\"#FF9800\"\n            strokeMiterlimit=\"12\"\n            strokeWidth=\"35.486\"\n            d=\"M150.5 37.4L27.1 284.2 274 284.2z\"\n        ></path>\n    </svg>\n}\nconst IncidentsIcon = () => {\n    return <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0\"\n        y=\"0\"\n        enableBackground=\"new 0 0 300 300\"\n        version=\"1.1\"\n        viewBox=\"0 0 300 300\"\n        xmlSpace=\"preserve\"\n    >\n        <path fill=\"#F44336\" d=\"M150.5 0.5L0.5 300.5 300.5 300.5z\"></path>\n    </svg>\n}\nconst DatapointsIcon = () => {\n    return <svg xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"0 0 299 300\">\n        <path fill=\"#fd0\" d=\"M0 0H300V300H0z\"></path>\n    </svg>\n}\n\nexport default MapKey\n\n","import { Divider, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import DetailsBlock from '../../components/DetailsBlock';\nimport DetailsCaption from '../../components/DetailsCaption';\nimport DetailsContainer from '../../components/DetailsContainer';\nimport DetailsHeader from '../../components/DetailsHeader';\nimport MapDisplay from '../../components/MapDisplay';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { Link as RouterLink} from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport MapKey from '../maps/MapKey';\n\nconst width = 250;\n\nconst useStyles = makeStyles((theme) => ({\n    details: {\n        width: width,\n        paddingLeft: theme.spacing(2.5)\n    },\n    map: {\n        width: `calc(100% - ${width}px)`,\n        height: theme.spacing(50),\n    },\n    link: {\n        color: theme.palette.secondary.dark\n    }\n}));\n\n\nconst DashboardMaps = (props) => {\n    const classes = useStyles();\n    return <>\n        <DetailsContainer>\n            <Grid container>\n                <MapDisplay />\n                <Grid className={classes.details}>\n                    <Grid container>\n                        <DetailsHeader header={`Maps`} />\n                        <Link className={classes.link} button=\"true\" component={RouterLink} to={props.path.path}>\n                            <ChevronRightIcon />\n                        </Link>\n                    </Grid>\n                    <DetailsCaption caption={`View real time cases and incidents occuring based on the location`} />\n                    <Divider />\n                    <MapKey/>\n                </Grid>\n            </Grid>\n        </DetailsContainer>\n    </>\n}\n\nexport default DashboardMaps;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { LinearProgress } from '@material-ui/core';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: theme.spacing(10),\n    },\n    colorPrimary: {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n        backgroundColor: theme.palette.secondary.lighter\n    },\n}))(LinearProgress);\n\nconst LoadingBar = () => <BorderLinearProgress variant=\"indeterminate\" />\n\nexport default LoadingBar","import { Divider } from '@material-ui/core';\nimport React from 'react';\nimport DetailsBlock from '../../components/DetailsBlock';\nimport DetailsCaption from '../../components/DetailsCaption';\nimport DetailsContainer from '../../components/DetailsContainer';\nimport DetailsHeader from '../../components/DetailsHeader';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles} from '@material-ui/core/styles';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport LoadingBar from '../../components/LoadingBar';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        maxHeight: '200px',\n        overflow: 'auto'\n    },\n    row: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    icon: {\n        backgroundColor: theme.palette.secondary.dark,\n        padding: theme.spacing(0),\n        margin: theme.spacing(0)\n    },\n    iconContainer: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    title: {\n        color: theme.palette.primary.light,\n    },\n    name: {\n        color: theme.palette.primary.dark,\n        fontWeight: '600',\n        marginBottom: theme.spacing(0.75)\n    },\n    containerSpaceBetween: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    button: {\n        backgroundColor: theme.palette.secondary.dark,\n        color: theme.palette.secondary.lighter,\n        padding: theme.spacing(0),\n        margin: theme.spacing(0)\n    },\n    link: {\n        color: theme.palette.secondary.dark\n    },\n    rowLink: {\n        '&:hover, &:focus': {\n            textDecoration: 'none'\n        },\n    }\n}));\n\n\nconst DashboardUpdates = (props) => {\n    const { path, updatesData, profilesData } = props;\n    const classes = useStyles();\n    const updatesInfo = updatesData.map((update) => {\n        const profileId = update.general.userId\n        const getProfileData = profilesData.filter((profile)=> profileId === profile.information.profileId)\n        const [ profileData ] = getProfileData\n        return {...update, profileData}\n        // concating the profiles data into the updates data based on ID.\n    })\n\n\n    return <>\n        <DetailsContainer>\n            <Grid container>\n                <DetailsHeader header={`Updates`} />\n                <Link button=\"true\" className={classes.link} component={RouterLink} to={path.path}>\n                    <ChevronRightIcon />\n                </Link>\n            </Grid>\n            <DetailsCaption caption={`Get the latest updates from personnel reviewing and updating incidents and or cases`} />\n            <Divider />\n            <div className={classes.container}>\n                {\n                        updatesInfo.map((update, i) => {\n                        const {_id, general, profileData, updates} = update;\n                        return profileData? <DetailsBlock key={i} hover={true}>\n                            <Link component={RouterLink} to={`/updates/${_id}`} className={classes.rowLink}>\n                                <div className={classes.row}>\n                                    <Grid container wrap=\"nowrap\" spacing={2}>\n                                        <Grid item className={classes.iconContainer}>\n                                            <Avatar className={classes.icon} src={require(`./../../images/${profileData.information.img_src}`).default}/>\n                                        </Grid>\n                                        <Grid item xs zeroMinWidth>\n                                            <Grid container className={classes.containerSpaceBetween}>\n                                                <Typography variant=\"body2\" className={classes.title}>{profileData.information.position}</Typography>\n                                                <Typography variant=\"body2\" className={classes.title}>{general.timestamp}</Typography>\n                                            </Grid>\n                                            <Typography variant=\"body2\" className={classes.name}>{profileData.information.fullname}</Typography>\n                                            <Typography variant=\"body2\" className={classes.message} noWrap>{`Updated incident ${updates.incidentArea} regarding the incident's status, click to view more`}</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            </Link>\n                        </DetailsBlock>\n                        :\n                        <LoadingBar/>\n                    })\n                }\n            </div>\n        </DetailsContainer>\n    </>\n}\n\nexport default DashboardUpdates","import { Divider, Grid, Typography } from '@material-ui/core';\nimport React from 'react';\nimport DetailsBlock from '../../components/DetailsBlock';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DetailsCaption from '../../components/DetailsCaption';\nimport DetailsContainer from '../../components/DetailsContainer';\nimport DetailsHeader from '../../components/DetailsHeader';\nimport CloudIcon from '@material-ui/icons/Cloud';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    column: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    },\n    weatherIcon: {\n        color: theme.palette.primary.light,\n        fontSize: '60px'\n    },\n    temperature: {\n        fontSize: '2rem',\n        fontWeight: '500'\n    },\n    textBold: {\n        fontWeight: '500'\n    },\n    weatherInfo: {\n        padding: theme.spacing(2),\n        color: theme.palette.primary.light\n    }\n}));\n\nconst WeatherData = {\n    location: 'Los Angeles',\n    weatherType: 'Cloudy',\n    temperature: '74°F',\n    windSpeed: 'NE 8mph',\n    humidity: '05%',\n    precipitation: '05%',\n    groundTemp: '74°F',\n    lastRained: '4 weeks ago'\n}\n\nconst DashboardWeather = () => {\n    \n    const classes = useStyles();\n    return <>\n        <DetailsContainer>\n            <DetailsHeader header={`Weather`}/>\n            <DetailsCaption caption={`Get real-time information based on the current location`}/>\n            <Divider/>\n            <DetailsBlock>\n                <Grid container className={classes.container}>\n                    <Grid item md={5} className={classes.column}>\n                        <CloudIcon className={classes.weatherIcon}/>\n                        <Typography variant=\"body2\" className={classes.textBold}>{WeatherData.weatherType}</Typography>\n                        <Typography variant=\"body2\" className={classes.temperature}>{WeatherData.temperature}</Typography>\n                    </Grid>\n                    <Grid item md={7} className={classes.weatherInfo}>\n                        <Grid container>\n                            <Typography variant=\"body2\" className={classes.textBold}>Precipitation: </Typography>\n                            <Typography variant=\"body2\">{WeatherData.precipitation}</Typography>\n                        </Grid>\n                        <Grid container>\n                            <Typography variant=\"body2\" className={classes.textBold}>Wind: </Typography>\n                            <Typography variant=\"body2\">{WeatherData.windSpeed}</Typography>\n                        </Grid>\n                        <Grid container>\n                            <Typography variant=\"body2\" className={classes.textBold}>Humidity: </Typography>\n                            <Typography variant=\"body2\">{WeatherData.humidity}</Typography>\n                        </Grid>\n                        <Grid container>\n                            <Typography variant=\"body2\" className={classes.textBold}>Ground Temp: </Typography>\n                            <Typography variant=\"body2\">{WeatherData.groundTemp}</Typography>\n                        </Grid>\n                        <Grid container>\n                            <Typography variant=\"body2\" className={classes.textBold}>Last Rained: </Typography>\n                            <Typography variant=\"body2\">{WeatherData.lastRained}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </DetailsBlock>\n        </DetailsContainer>\n    </>\n    // https://www.weatherbit.io/account/dashboard\n}\n\nexport default DashboardWeather;","// import { Typography } from '@material-ui/core';\n// import { makeStyles } from '@material-ui/core/styles';\n// import React from 'react';\n\n// const useStyles = makeStyles((theme) => ({\n//     date: {\n//         padding: theme.spacing(0, 2)\n//     },\n// }));\n\n\nconst getDateTime = () => {\n    // const classes = useStyles();\n    const date = new Date();\n    const getMonth = (d) => {\n        const monthList = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        return monthList[d.getMonth()];\n    }\n    const getDay = (d) => {\n        return d.getDate();\n    }\n    const getYear = (d) => {\n        return d.getFullYear();\n    }\n    return `${getMonth(date)} ${getDay(date)}, ${getYear(date)}`\n}\n\nexport default getDateTime;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport getDateTime from '../../getDateTime';\n\nexport const fetchUpdates = createAsyncThunk('updates/fetchUpdates', async () => {\n    const response = fetch(`${process.env.PORT || 'http://localhost:8080'}/updates/get-updates-db`)\n    // downloaded a fetch polyfill \n    .then(function(response) {\n        if (!response.ok) {\n            return response.statusText\n        }\n        return response.json();\n    })\n    return response\n});\n\nexport const updatesSlice = createSlice({\n    name: 'update',\n    initialState: {\n        meta: {\n            status: 'idle',\n            fetch: true,\n            errorLog: {\n                error: false,\n                message: '',\n                errorCode: '',\n            }\n        },\n        data: {\n            selectedUpdateId: '',\n            updatesList: [],\n        }\n    },\n    reducers: {\n        selectUpdate: (state, {payload}) => {\n            state.data.selectedUpdateId = payload;\n            state.meta.status = 'success';\n        },\n    },\n    extraReducers: {\n        [fetchUpdates.pending]: (state) => {\n            state.meta.status = 'loading';\n        },\n        [fetchUpdates.fulfilled]: (state, action) => {\n            state.meta.status = 'success';\n            state.data.updatesList = action.payload;\n        },\n        [fetchUpdates.rejected]: (state, action) => {\n            state.meta.status = 'failed';\n            state.meta.error = action.error.message\n        },\n    },\n})\nexport const { selectUpdate } = updatesSlice.actions;\n\nexport const getUpdateId = state => state.update.data.selectedUpdateId;\nexport const listUpdates = state => state.update.data.updatesList;\nexport const getSelectedUpdate = state => state.update.data.updatesList.find((update) => !update._id.indexOf(state.update.data.selectedUpdateId))\n\nexport const getUpdatesDetailBlocks = (state) => {\n    const selectedId = getUpdateId(state);\n    const updatesList = listUpdates(state);\n    const selectedUpdate = updatesList.find((update) => !update._id.indexOf(selectedId));\n    // console.log(selectedUpdate);\n    if (!selectedUpdate) { return {}; }\n    const {_id,general, updates} = selectedUpdate;\n    // console.log(updates.incidentUpdate, 'array')\n    const blocks = [\n        {\n            updateDetails: [\n                {\n                    title: 'Update Information',\n                    rows: [\n                        { type: 'Update', content: general.timestamp},\n                        { type: 'Update Id', content: _id},\n                        { type: 'Timestamp', content: general.time},\n                        { type: 'Date', content: getDateTime()}\n                    ]\n                },\n                {\n                    title: 'Update Incident Details',\n                    rows: [\n                        { type: 'Incident Update', content: updates.incidentUpdate.map(update => `${update}` || 'N/A')},\n                    ]\n                }\n            ]\n        }\n    ];\n    return blocks || [];\n}\n\nexport default updatesSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchProfiles = createAsyncThunk('profiles/fetchProfiles', async () => {\n    const response = fetch(`${process.env.PORT || 'http://localhost:8080'}/profiles/get-profiles-db`)\n    // downloaded a fetch polyfill \n    .then(function(response) {\n        if (!response.ok) {\n            console.log('ok mounted!')\n            return response.statusText\n        }\n        return response.json();\n    })\n    return response\n});\n\nexport const profilesSlice = createSlice({\n    name: 'profile',\n    initialState: {\n        meta: {\n            status: 'idle',\n            fetch: true,\n            errorLog: {\n                error: false,\n                message: '',\n                errorCode: '',\n            }\n        },\n        data: {\n            selectedProfileId: '',\n            profilesList: [],\n        }\n    },\n    reducers: {\n    },\n    extraReducers: {\n        [fetchProfiles.pending]: (state) => {\n            state.meta.status = 'loading';\n        },\n        [fetchProfiles.fulfilled]: (state, action) => {\n            state.meta.status = 'success';\n            state.data.profilesList = action.payload;\n            // Need to figure out how to go about refreshing data \n        },\n        [fetchProfiles.rejected]: (state, action) => {\n            state.meta.status = 'failed';\n            state.meta.error = action.error.message\n            // state.data.incidentList = payload;\n        },\n    },\n})\nexport const listProfiles = state => state.profile.data.profilesList;\nexport default profilesSlice.reducer;\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport MainContainer from '../components/MainContainer';\nimport primaryLinks from '../components/PrimaryLinks';\nimport { useSelector } from 'react-redux';\nimport DashboardIncidents from '../features/dashboard/DashboardIncidents';\nimport DashboardMaps from '../features/dashboard/DashboardMaps';\nimport DashboardUpdates from '../features/dashboard/DashboardUpdates';\nimport DashboardWeather from '../features/dashboard/DashboardWeather';\nimport { listUpdates } from '../app/reducers/updates/updateSlice';\nimport { listProfiles } from '../app/reducers/profiles/profilesSlice';\nimport { listIncidents } from '../app/reducers/incidents/incidentSlice';\nimport { makeStyles } from '@material-ui/core/styles';\nimport _ from \"lodash\";\nimport LoadingSVG from '../images/svgs/loadingSVG';\n\n// import Maps from './Maps';\nconst useStyles = makeStyles((theme) => ({\n    loadingContainer: {\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n}));\nconst Dashboard = () => {\n    // console.log(primaryLinks);\n    const classes = useStyles();\n    const links = primaryLinks()\n\n    const [ incidents, updates, maps ] = links;\n    // console.log(incidents);\n    const updatesData = useSelector(listUpdates)\n    const profilesData = useSelector(listProfiles)\n    const incidentsData = useSelector(listIncidents)\n\n    return <>\n        <MainContainer>\n            {\n                !_.isEmpty(updatesData) ||  !_.isEmpty(profilesData) ||  !_.isEmpty(incidentsData) ?\n                <>\n                    <Grid item md={7}>\n                        <DashboardUpdates path={updates} updatesData={updatesData} profilesData={profilesData}/>\n                        <DashboardMaps path={maps}/>\n                    </Grid>\n                    <Grid item md={5}>\n                        <DashboardIncidents path={incidents} incidentsData={incidentsData}/>\n                        <DashboardWeather/>\n                    </Grid>\n                </>\n                :\n                <>\n                    <Grid item md={3}></Grid>\n                    <Grid item md={6} className={classes.loadingContainer}>\n                        <div>\n                            <LoadingSVG />\n                        </div>\n                    </Grid>\n                    <Grid item md={3}></Grid>\n                </>\n            }\n        </MainContainer>\n    </>\n}\n\nexport default Dashboard;","const labels = \n    {\n        statuses: [\n            {\n                uid: 'OPEN',\n                label:\"Open\",\n            },\n            {\n                uid: 'REVIEWING',\n                label: \"Reviewing\",\n            },\n            {\n                uid: 'MUSTRESOLVE',\n                label: \"Must Resolve\",\n            },\n            {\n                uid: 'RESOLVED',\n                label:\"Resolved\"\n            }\n        ],\n        priorities: [\n            {\n                uid: 'LOW',\n                label:\"Low\",\n            },\n            {\n                uid: 'MEDIUM',\n                label: \"Medium\",\n            },\n            {\n                uid: 'HIGH',\n                label: \"High\",\n            },\n        ],\n        reviews: [\n            {\n                uid: 'OPEN',\n                label: 'Open'\n            },\n            {\n                uid: 'REVIEWING',\n                label: 'Reviewing'\n            },\n            {\n                uid: 'REVIEWED',\n                label: 'Reviewed'\n            },\n        ]\n    }\n;\nexport default labels;","import React from 'react';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectIncident,\n    select\n} from '../../app/reducers/incidents/incidentSlice'\nimport { NavLink as RouterLink, useRouteMatch} from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\n// import DetailsTitle from '../../components/DetailsTitle';\n\nconst useStyles = makeStyles((theme) => ({\n    items: {\n        padding: theme.spacing(0, 1.5),\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n    },\n    itemContent: {\n        textAlign: 'left',\n        flexGrow: 1,\n        flexBasis: 0,\n    },\n    icon: {\n        display: 'flex',\n        textAlign: 'right',\n        alignItems: 'center',\n    },\n    button: {\n        width: '100%',\n        textTransform: 'none',\n        borderRadius: '0px',\n        height: theme.spacing(5),\n        color: theme.palette.primary.main,\n        borderLeft: '4px solid',\n        // backgroundColor: theme.palette.secondary.lighter,\n        // color: theme.palette.primary.main,\n        // margin: theme.spacing(1, 0),\n        // '$:focus-visible': {\n        //     border: `3px solid theme.p`\n        // }\n    },\n    inactive: {\n        backgroundColor: theme.palette.secondary.lighter,\n        margin: theme.spacing(0.7, 0),\n        '&:hover, &:focus': {\n            backgroundColor: theme.palette.secondary.darkish,\n        },\n    },\n    active: {\n        backgroundColor: theme.palette.secondary.dark,\n        color: theme.palette.secondary.lighter,\n        margin: theme.spacing(0.7, 1.5),\n        '&$active': {\n            backgroundColor: theme.palette.secondary.dark,\n        },\n    },\n    openLabel: {\n        borderColor: theme.palette.warning.light\n    },\n    reviewingLabel: {\n        borderColor: theme.palette.info.light\n    },\n    mustResolveLabel: {\n        borderColor: theme.palette.error.light\n    },\n    resolvedLabel: {\n        borderColor: theme.palette.success.light\n    },\n}));\n\nconst IncidentItem = (props) => {\n    const classes = useStyles();\n    let { path } = useRouteMatch();\n\n    const labelColorSwitch = (props) => {\n        switch (props.query) {\n            case \"Open\": return classes.openLabel;\n            case \"Reviewing\": return classes.reviewingLabel;\n            case \"Must Resolve\": return classes.mustResolveLabel;\n            case \"Resolved\": return classes.resolvedLabel;\n            default: return\n        }\n    }\n\n    const setSelectedId = (event) => {\n        dispatch(select(event))\n    };\n    \n    const dispatch = useDispatch()\n    const selectedId = useSelector(selectIncident)\n    // console.log(_.isEmpty(selectedId));\n    \n    return <>\n    <Link \n        key={props.state._id} \n        component={RouterLink} \n        to={`${path}/${props.state._id}`}\n        // activeClassName={}\n        // Needa figure out the color issue with this.\n    >\n    <Button\n        data-id={props.state._id}\n        className={`${classes.button} ${props.state._id === selectedId ? classes.active : classes.inactive} ${labelColorSwitch(props)}`}\n        onClick={(e) => setSelectedId(e.currentTarget.dataset.id)}\n    >\n        <Grid item className={`${classes.items}`}>\n            <Grid className={classes.itemContent}>\n                <Typography variant=\"body2\">{props.state.geographics.municipal}</Typography>\n            </Grid>\n            <Grid className={classes.itemContent}>\n                <Typography variant=\"body2\">{props.state.geographics.state}</Typography>\n            </Grid>\n            <Grid className={classes.itemContent}>\n                <Typography variant=\"body2\">{props.state.incident.volume_traffic}</Typography>\n            </Grid>\n            <Grid className={classes.itemContent}>\n                <Typography variant=\"body2\">{props.state.incident.status}</Typography>\n            </Grid>\n        </Grid>\n    </Button>\n    </Link>\n</>\n}\n\nexport default IncidentItem;\n","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport IncidentItem from './IncidentItem';\n\nconst IncidentFilterList = (props) => {\n    const filteredList = props.state.filter((incident)=> incident.incident.status.toLowerCase() === props.filterQuery.toLowerCase());\n    return <>   \n        {\n            filteredList ? filteredList.map((incident) => {\n                return <IncidentItem key={incident._id} state={incident} query={props.filterQuery}/>\n            })\n            :\n            <></>\n        }\n    </>\n}\n\nexport default IncidentFilterList","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\n// import _ from \"lodash\";\n\nconst useStyles = makeStyles((theme) => ({\n    itemRow: {\n        padding: theme.spacing(1, 3),\n        width: '100%',\n        // boxShadow: '0px 0px 10px #dbdbdb',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        color: theme.palette.primary.light\n    },\n    itemContent: {\n        textAlign: 'left',\n        flexGrow: 1,\n        flexBasis: 0,\n    },\n}));\n// ['Location', 'State', 'Volume', 'Status']\nconst IncidentListLabels = (props) => {\n    // Not too sure how to use the _pick. if half the data is in two different objects, not in the same root level\n    const classes = useStyles();\n    return <>\n        <Grid item className={classes.itemRow}>\n            {\n                props.keyLabels.map(label => <Grid key={label} className={classes.itemContent}>\n                    <Typography variant=\"body2\">{label}</Typography>\n                </Grid>)\n            }\n        </Grid>\n        {props.children}\n    </>\n}\n\nexport default IncidentListLabels;","import React, { useState } from 'react';\nimport { Grid, Typography, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { KeyboardArrowUp } from '@material-ui/icons';\nimport IncidentListLabels from './IncidentListLabels';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        margin: theme.spacing(1)\n    },\n    icon: {\n        display: 'flex',\n        textAlign: 'right',\n        alignItems: 'center',\n    },\n    header: {\n        paddingBottom: theme.spacing(1.5),\n        fontWeight: '600'\n    },\n    headerRow: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    text: {\n        padding: theme.spacing(1,0)\n    },\n    openIcon: {\n        transform: \"rotate(0deg)\",\n        transition: theme.transitions\n    },\n    closeIcon: {\n        transform: \"rotate(180deg)\",\n        transition: theme.transitions\n    }\n}));\n\n\nconst IncidentListCategories = (props) => {\n    const [toggleShow, setToggleShow] = useState(true);\n    const classes = useStyles();\n\n    return <Grid className={classes.container}>\n        <Grid className={classes.headerRow}>\n            <Typography variant=\"body1\" className={classes.header}>{props.header}</Typography>\n            <Grid className={`\n                ${classes.icon} \n                ${toggleShow ? classes.openIcon : classes.closeIcon}\n            `}>\n                <KeyboardArrowUp onClick={() => { setToggleShow((prevState)=> !prevState)}} />\n            </Grid>\n        </Grid>\n        <Divider />\n        {\n            toggleShow ? \n            <Grid item className={classes.itemRow}>\n                <IncidentListLabels state={props.state} keyLabels={['Location', 'State', 'Volume', 'Status']}/>\n                { props.children }\n             </Grid>\n            :\n            <></>\n        }\n    </Grid>\n}\n\nexport default IncidentListCategories;","import React from 'react';\nimport labels from '../../app/detailStatusLabels';\n// import { pick } from 'lodash.pick';\n// import { useSelector } from 'react-redux';\nimport IncidentFilterList from './IncidentFilterList';\nimport IncidentListCategories from './IncidentListCategories';\n\nconst IncidentList = (props) => {\n    const { statuses } = labels;\n    return <>\n        {\n            statuses.map(status => {\n                return <IncidentListCategories\n                    key={status.uid}\n                    header={status.label}\n                    state={props.state}\n                    error={props.error}\n                >\n                    <IncidentFilterList\n                        filterQuery={status.label}\n                        state={props.state}\n                        error={props.error}\n                    />\n                </IncidentListCategories>\n            })\n        }\n    </>\n}\n\nexport default IncidentList","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    saveButton: {\n        fontWeight: 600,\n        borderRadius: '0px',\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.secondary.main,\n        margin: theme.spacing(2, 0),\n        '&:hover, &:focus': {\n            backgroundColor: theme.palette.secondary.darkish,\n        },\n    },\n}))\n\nconst PrimaryButton = (props) => {\n    const { children, handler, text, type, fullWidth} = props;\n    const classes = useStyles();\n    return <Button\n        className={classes.saveButton}\n        variant=\"contained\"\n        disableElevation\n        onClick={handler}\n        type={type || 'button'}\n        fullWidth={fullWidth || false}\n    >\n        {text}{children}\n    </Button>\n}\n\nexport default PrimaryButton;","\n\n// NOT REAL MIDDLEWARE, PLACEMENT FOR NOW UNTIL FINDING A MIDDLEWARE SOLUTION\n\n\nconst updateIncident = (incidentList, values, id) => {\n    const filterIncidents = incidentList.map(item => {\n        const {_id, geographics, incident} = item;\n        if ( item._id !== id) {\n            return item;\n        }\n        const updateValues = (incident, values) => {\n            const { status, priority, additional_notes } = values;\n            return {\n                ...incident,\n                status: status,\n                priority: priority,\n                additional_notes: additional_notes\n            }\n        }\n        return {\n            _id,\n            geographics,\n            incident: updateValues(incident, values)\n        }\n    })\n    return filterIncidents || {};\n}\n\nexport default updateIncident;","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\n// import * as yup from 'yup';\nimport { FormControl, Grid, InputLabel, Select, TextField } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport PrimaryButton from '../../components/PrimaryButton';\nimport labels from '../../app/detailStatusLabels';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listIncidents, updateList } from '../../app/reducers/incidents/incidentSlice';\nimport updateIncident from '../../app/reducers/incidents/middleware/updateIncident';\n\nconst useStyles = makeStyles((theme) => ({\n    saveButton: {\n        fontWeight: 600,\n        borderRadius: '0px',\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.secondary.main,\n        margin: theme.spacing(2, 0),\n        '&:hover, &:focus': {\n            backgroundColor: theme.palette.secondary.darkish,\n        },\n    },\n    textFieldContainer: {\n        '& .MuiInputLabel-root': {\n            margin: theme.spacing(0, 1.5),\n        },\n        '& .MuiInputBase-inputMultiline': {\n            margin: theme.spacing(0, 1.5),\n        },\n    },\n    textField: {\n        backgroundColor: theme.palette.secondary.lighter,\n    },\n    title: {\n        fontWeight: '600',\n        color: theme.palette.primary.light,\n        paddingBottom: theme.spacing(1)\n    },\n    select: {\n        backgroundColor: theme.palette.secondary.lighter,\n        padding: theme.spacing(0.75),\n        minWidth: '235px',\n        maxWidth: '300px'\n    },\n    selectGroup: {\n        padding: theme.spacing(2, 0)\n    }\n}))\n\nconst IncidentFormFields = (props) => {\n    const { data, id } = props;\n    const { status, priority, additional_notes } = data;\n    const {statuses, priorities} = labels;\n    const [formContent, setFormContent] = useState({\n        status: status,\n        priority: priority,\n        additional_notes: additional_notes\n    })\n\n    const incidentList = useSelector(listIncidents);\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const initialValues = {\n        additional_notes: formContent.additional_notes,\n        status: formContent.status,\n        priority: formContent.priority,\n    }\n    // const validationSchema = yup.object({\n    //     additional_notes: yup\n    //         .string('List any additional notes')\n    //         .max(75, 'Too Long!'),\n    //     status: yup\n    //         .string('Select a status level')\n    //         .required('Selected status is required'),\n    //     priority: yup\n    //         .string('Select a priority level')\n    //         .required('Selected priority is required'),\n    // });\n\n    useEffect(() => {\n        setFormContent({\n            status: status,\n            priority: priority,\n            additional_notes: additional_notes\n        })     \n    }, [status, priority, additional_notes])\n\n    const submitFormData = (values) => {\n        const updatedIncidentList = updateIncident(incidentList, values, id);\n        dispatch(updateList(updatedIncidentList))\n    }\n\n    return <>\n        <Formik\n            initialValues = {initialValues}\n            onSubmit ={(values) => submitFormData(values)}\n            enableReinitialize\n            // validationSchema = {validationSchema}\n        >\n            {props => (\n                <form onSubmit={props.handleSubmit}>\n                    <div className={classes.textFieldContainer}>\n                        <TextField\n                            className={classes.textField}\n                            id=\"standard-multiline-flexible\"\n                            label={'Additional Notes'}\n                            multiline\n                            fullWidth\n                            name=\"additional_notes\"\n                            rows={4}\n                            value={props.values.additional_notes}\n                            onChange={props.handleChange}\n                            error={props.touched.additional_notes && Boolean(props.errors.additional_notes)}\n                            helperText={props.touched.additional_notes && props.errors.additional_notes}\n                        />\n                    </div>\n                    <Grid container className={classes.selectGroup}>\n                        <Grid item xs={6}>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"age-native-simple\">Status</InputLabel>\n                                <Select\n                                    className={classes.select}\n                                    native\n                                    name=\"status\"\n                                    label=\"status\"\n                                    value={props.values.status}\n                                    onChange={props.handleChange}\n                                    error={props.touched.status && Boolean(props.errors.status)}\n                                    inputProps={{\n                                        name: 'status',\n                                        id: 'status-native-simple',\n                                    }}\n                                >\n                                    <option aria-label={'Status'} value=\"\" disabled>- select -</option>\n                                    {\n                                        statuses.map((status) => <option key={status.uid} value={status.label}>{status.label}</option>)\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"age-native-simple\">Priority</InputLabel>\n                                <Select\n                                    className={classes.select}\n                                    native\n                                    name=\"priority\"\n                                    label=\"priority\"\n                                    value={props.values.priority}\n                                    onChange={props.handleChange}\n                                    error={props.touched.priority && Boolean(props.errors.priority)}\n                                    inputProps={{\n                                        name: 'priority',\n                                        id: 'status-native-simple',\n                                    }}\n                                >\n                                    <option aria-label={'Priority'} value=\"\" disabled>- select -</option>\n                                    {\n                                        priorities.map((priority) => <option key={priority.uid} value={priority.label}>{priority.label}</option>)\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    <PrimaryButton text={'Save Changes'} type=\"submit\">\n                        <NavigateNextIcon />\n                    </PrimaryButton>\n                </form>\n            )}\n        </Formik>\n    </>\n}\n\nexport default IncidentFormFields;","import React, { useLayoutEffect, useState } from 'react';\nimport { useParams, useRouteMatch } from \"react-router-dom\";\n// import { withStyles } from '@material-ui/core/styles';\nimport DetailsContainer from '../../components/DetailsContainer';\nimport DetailsBlock from '../../components/DetailsBlock';\nimport DetailsHeader from '../../components/DetailsHeader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from \"lodash\";\nimport {\n    selectIncident, getIncidentDetailBlocks, select\n} from '../../app/reducers/incidents/incidentSlice'\nimport DetailsTable from '../../components/DetailsTable';\n// import DetailsSelect from '../../components/DetailsSelect';\n// import labels from '../../app/detailStatusLabels';\nimport IncidentFormFields from './IncidentFormFields';\nimport LoadingBar from '../../components/LoadingBar';\n\nconst IncidentDetails = (props) => {\n    // const classes = useStyles();\n    let { url } = useRouteMatch();\n    \n    const { incidents } = props;\n    const isLoaded = !_.isEmpty(incidents);\n    const [loading, setloading] = useState(isLoaded);\n    const { incidentId } = useParams();\n    const dispatch = useDispatch();\n    const selectedId = useSelector(selectIncident);\n    // const selectCase = useSelector(getSelectedCase);\n    const detailBlocks = useSelector(getIncidentDetailBlocks);\n\n    const selectedIncident = incidents.find((incident) => !incident._id.indexOf(selectedId));\n    // Remove? since in redux store.\n\n    useLayoutEffect(() => {\n        setloading(!isLoaded ? true : false);\n        if (!selectedId) {\n            dispatch(select(incidentId));\n        }\n        // If hard refresh, dispatch a select incident id based on the URL params to keep in sync\n        // Self: If want to keep the tabs in sync use local storage to store data alternative to useEffect.\n    }, [selectedId, selectedIncident, isLoaded, incidentId, dispatch]);\n\n    if (!selectedIncident) { return null; }\n    // If the incident is not selected, return early to prevent re-renders\n\n    const { _id, geographics, incident } = selectedIncident;\n    const [incidentInfo] = detailBlocks;\n    const [IncidentInformation, AreasAffected] = incidentInfo.incidentDetails;\n    // console.log(IncidentInformation, AreasAffected, )\n    // To deconstruct the array for easier use\n\n    return <DetailsContainer query={!loading && isLoaded ? incident.status : ''}>\n        {\n            !loading ?\n                <>\n                    <DetailsHeader header={`Incident: ${geographics.municipal}`} />\n                    <DetailsBlock title={IncidentInformation.title} detailRows={IncidentInformation.rows} />\n                    <DetailsBlock title={`Incident Cases`} >\n                        <DetailsTable\n                            data={incident.cases}\n                            linkAccessors={'zip_code'}\n                            path={`${url}/case`}\n                            // base url to have links within the table rows.\n                            allowedKeys={[\"zip_code\", \"initial_time\", \"volume_traffic\", \"reviewed\"]}\n                            // for filtering specific data properties\n                            tableHeader={[\"Zip Code\", \"Initial Time\", \"Volume Traffic\", \"Review\"]}\n                        />\n                    </DetailsBlock>\n                    <DetailsBlock title={AreasAffected.title} detailRows={AreasAffected.rows} />\n                    <DetailsBlock title={`Incident Progress`}>\n                        <IncidentFormFields data={incident} id={_id}/>\n                    </DetailsBlock>\n                </>\n                :\n                <LoadingBar/>\n        }\n\n    </DetailsContainer>\n}\n\nexport default IncidentDetails;\n","import { GridList, GridListTile } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n      },\n      gridList: {\n        width: '100%',\n        minHeight: 150,\n      },\n}));\n\nconst CaseImageList = (props) => {\n    const { images } = props;\n    const classes = useStyles();\n    return <div className={classes.root}>\n    <GridList cellHeight={160} className={classes.gridList} cols={3}>\n      {images.map((img, i) => (\n        <GridListTile key={i} cols={1}>\n          <img src={require(`./../../images/${img.img_src}`).default} alt={img.caption} />\n        </GridListTile>\n      ))}\n    </GridList>\n  </div>\n}\n\nexport default CaseImageList;","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\n// import * as yup from 'yup';\nimport { FormControl, Grid, InputLabel, Select, TextField } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport PrimaryButton from '../../components/PrimaryButton';\nimport labels from '../../app/detailStatusLabels';\n// import { useDispatch } from 'react-redux';\n// import { listIncidents, updateList } from '../../app/reducers/incidents/incidentSlice';\n// import updateIncident from '../../app/reducers/incidents/middleware/updateIncident';\nimport DetailsBlock from '../../components/DetailsBlock';\n\nconst useStyles = makeStyles((theme) => ({\n    saveButton: {\n        fontWeight: 600,\n        borderRadius: '0px',\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.secondary.main,\n        margin: theme.spacing(2, 0),\n        '&:hover, &:focus': {\n            backgroundColor: theme.palette.secondary.darkish,\n        },\n    },\n    textFieldContainer: {\n        marginBottom: theme.spacing(1.5),\n        '& .MuiInputLabel-root': {\n            margin: theme.spacing(0, 1.5),\n        },\n        '& .MuiInputBase-inputMultiline': {\n            margin: theme.spacing(0, 1.5),\n        },\n    },\n    textField: {\n        backgroundColor: theme.palette.secondary.lighter,\n    },\n    title: {\n        fontWeight: '600',\n        color: theme.palette.primary.light,\n        paddingBottom: theme.spacing(1)\n    },\n    select: {\n        backgroundColor: theme.palette.secondary.lighter,\n        padding: theme.spacing(0.75),\n        minWidth: '235px',\n        maxWidth: '300px'\n    },\n    selectGroup: {\n        padding: theme.spacing(2, 0)\n    }\n}))\n// const validationSchema = yup.object({\n//     hazard_warnings: yup\n//         .string('List any additional notes')\n//         .max(75, 'Too Long!'),\n//     additional_notes: yup\n//         .string('List any additional notes')\n//         .max(75, 'Too Long!'),\n//     valuable_assets: yup\n//         .string('List any additional notes')\n//         .max(75, 'Too Long!'),\n//     reviewed: yup\n//         .string('Select a status level')\n//         .required('Selected status is required'),\n// });\n\nconst CaseFormFields = (props) => {\n    const { data } = props;\n    // const caseId = data.zip_code;\n    const { reviewed, additional_notes, valuable_assets, hazard_warnings } = data;\n    console.log(data)\n    const {reviews} = labels;\n    const [formContent, setFormContent] = useState({\n        reviewed: reviewed,\n        valuable_assets: valuable_assets,\n        hazard_warnings: hazard_warnings,\n        additional_notes: additional_notes\n    })\n\n    // const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const initialValues = {\n        additional_notes: formContent.additional_notes,\n        reviewed: formContent.reviewed,\n        hazard_warnings: formContent.hazard_warnings,\n        valuable_assets: formContent.valuable_assets\n    }\n\n    useEffect(() => {\n        setFormContent({\n            reviewed: reviewed,\n            additional_notes: additional_notes,\n            hazard_warnings: hazard_warnings,\n            valuable_assets: valuable_assets\n        })\n    }, [reviewed, additional_notes, hazard_warnings, valuable_assets])\n\n    const submitFormData = (values) => {\n        // const updateCaseList =\n        alert(JSON.stringify(values, null, 2));\n        console.log(values, 'values baby')\n    }\n\n    return <>\n        <Formik\n            initialValues={initialValues}\n            onSubmit={(values) => submitFormData(values)}\n            enableReinitialize\n            // validationSchema={validationSchema}\n        >\n            {props => (\n                <form onSubmit={props.handleSubmit}>\n                    <DetailsBlock title='Case Assessment'>\n                    <div className={classes.textFieldContainer}>\n                        <TextField\n                            className={classes.textField}\n                            id=\"standard-multiline-flexible\"\n                            label={'Valuable Assets'}\n                            multiline\n                            fullWidth\n                            name=\"valuable_assets\"\n                            rows={4}\n                            value={props.values.valuable_assets}\n                            onChange={props.handleChange}\n                            error={props.touched.valuable_assets && Boolean(props.errors.valuable_assets)}\n                            helperText={props.touched.valuable_assets && props.errors.valuable_assets}\n                        />\n                    </div>\n                    <div className={classes.textFieldContainer}>\n                        <TextField\n                            className={classes.textField}\n                            id=\"standard-multiline-flexible\"\n                            label={'Hazard Warnings'}\n                            multiline\n                            fullWidth\n                            name=\"hazard_warnings\"\n                            rows={4}\n                            value={props.values.hazard_warnings}\n                            onChange={props.handleChange}\n                            error={props.touched.hazard_warnings && Boolean(props.errors.hazard_warnings)}\n                            helperText={props.touched.hazard_warnings && props.errors.hazard_warnings}\n                        />\n                    </div>\n                    </DetailsBlock>\n                    <DetailsBlock title='Case Progress'>\n                    <div className={classes.textFieldContainer}>\n                        <TextField\n                            className={classes.textField}\n                            id=\"standard-multiline-flexible\"\n                            label={'Additional Notes'}\n                            multiline\n                            fullWidth\n                            name=\"additional_notes\"\n                            rows={4}\n                            value={props.values.additional_notes}\n                            onChange={props.handleChange}\n                            error={props.touched.additional_notes && Boolean(props.errors.additional_notes)}\n                            helperText={props.touched.additional_notes && props.errors.additional_notes}\n                        />\n                    </div>\n                    <Grid container className={classes.selectGroup}>\n                    <Grid item xs={6}>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"age-native-simple\">Review Status</InputLabel>\n                                <Select\n                                    className={classes.select}\n                                    native\n                                    name=\"reviewed\"\n                                    label=\"reviewed\"\n                                    value={props.values.reviewed}\n                                    onChange={props.handleChange}\n                                    // error={props.touched.status && Boolean(props.errors.status)}\n                                    inputProps={{\n                                        name: 'reviewed',\n                                        id: 'status-native-simple',\n                                    }}\n                                >\n                                    <option aria-label={'Status'} value=\"\" disabled>- select -</option>\n                                    {\n                                        reviews.map((status) => <option key={status.uid} value={status.label}>{status.label}</option>)\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={6}>\n                        </Grid>\n                    </Grid>\n                    <PrimaryButton text={'Save Changes'} type=\"submit\">\n                        <NavigateNextIcon />\n                        </PrimaryButton>\n                    </DetailsBlock>\n                </form>\n            )}\n        </Formik>\n    </>\n}\n\nexport default CaseFormFields;","import React, { useLayoutEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport DetailsContainer from '../../components/DetailsContainer';\nimport DetailsBlock from '../../components/DetailsBlock';\nimport DetailsHeader from '../../components/DetailsHeader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from \"lodash\";\nimport {\n    selectIncident, getCaseDetailBlocks, select, selectCase, getSelectedCase, \n} from '../../app/reducers/incidents/incidentSlice'\nimport { Grid, IconButton, LinearProgress} from '@material-ui/core';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport { useHistory } from 'react-router-dom';\n// import Link from '@material-ui/core/Link';\nimport DetailsTitle from '../../components/DetailsTitle';\nimport CaseImageList from './CaseImageList';\n// import DetailsTextField from '../../components/DetailsTextField';\n// import DetailsSelect from '../../components/DetailsSelect';\n// import NavigateNextIcon from '@material-ui/icons/NavigateNext';\n// import PrimaryButton from '../../components/PrimaryButton';\n// import labels from '../../app/detailStatusLabels';\nimport CaseFormFields from './CaseFormFields';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: theme.spacing(10),\n    },\n    colorPrimary: {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n        backgroundColor: theme.palette.secondary.lighter\n    },\n}))(LinearProgress);\n\nconst useStyles = makeStyles((theme) => ({\n    headerContainer: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    iconContainer: {\n        height: theme.spacing(4.5),\n        width: theme.spacing(4.5),\n        margin: theme.spacing(0.75)\n    },\n    iconLink: {\n        color: theme.palette.secondary.dark\n    },\n    subtitle: {\n        fontWeight: '500',\n        paddingTop: theme.spacing(1.25),\n        paddingBottom: theme.spacing(0.75)\n    }\n}));\n\nconst CaseDetails = (props) => {\n    const classes = useStyles();\n    // let [status, priority] = labels;\n    const { incidents } = props;\n    const isLoaded = !_.isEmpty(incidents);\n    const history = useHistory();\n    const [loading, setloading] = useState(isLoaded);\n    const { caseId } = useParams();\n    const { incidentId } = useParams();\n    const dispatch = useDispatch();\n    const selectedId = useSelector(selectIncident);\n    const selectedCase = useSelector(getSelectedCase);\n    const detailBlocks = useSelector(getCaseDetailBlocks);\n\n    const selectedIncident = incidents.find((incident) => !incident._id.indexOf(selectedId));\n\n    useLayoutEffect(() => {\n        setloading(!isLoaded ? true : false);\n        if (!selectedId) {\n            dispatch(select(incidentId));\n        }\n        dispatch(selectCase(caseId));\n        // If hard refresh, dispatch a select incident id based on the URL params to keep in sync\n        // Self: If want to keep the tabs in sync use local storage to store data alternative to useEffect.\n    }, [selectedId, caseId, incidentId, isLoaded, dispatch]);\n\n    if (!selectedIncident) { return null; }\n    // If the incident is not selected, return early to prevent re-renders\n\n    const { geographics, incident } = selectedIncident;\n     // To deconstruct the array for easier use\n    const [ casesInfo ] = detailBlocks;\n    const [ CaseInformation, CaseImages ] = casesInfo.caseDetails;\n\n    return <DetailsContainer query={!loading && isLoaded ? incident.status : ''}>\n        {\n            !loading ?\n                <>\n                    <Grid container className={classes.headerContainer}>\n                        <IconButton\n                            onClick={() => {\n                                history.goBack();\n                            }}\n                            className={classes.iconContainer} aria-label=\"backspace\">\n                            <NavigateBeforeIcon className={classes.iconLink} fontSize='small' />\n                        </IconButton>\n                        <div>\n                            <DetailsHeader header={`Zip Code: ${caseId}`} />\n                            <DetailsTitle title={`Incident: ${geographics.municipal}`} />\n                        </div>\n                    </Grid>\n                    <DetailsBlock title={CaseInformation.title} detailRows={CaseInformation.rows} />\n                    <DetailsBlock title={CaseImages.title}>\n                        <CaseImageList images={CaseImages.rows}/>\n                    </DetailsBlock>\n                    {/* <DetailsBlock title={`Case Progress`}> */}\n                        <CaseFormFields data={selectedCase}/>\n                    {/* </DetailsBlock> */}\n                </>\n                :\n                <>\n                    <BorderLinearProgress variant=\"indeterminate\" />\n                </>\n        }\n\n    </DetailsContainer>\n}\n\nexport default CaseDetails;\n","import React, { useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport MainContainer from '../components/MainContainer';\nimport IncidentList from '../features/incidents/IncidentList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouteMatch, useLocation } from 'react-router-dom';\nimport IncidentDetails from '../features/incidents/IncidentDetails';\nimport {\n    listIncidents, errorLog, select\n} from './../app/reducers/incidents/incidentSlice'\nimport {\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport CaseDetails from '../features/incidents/CaseDetails';\nimport DetailsHeader from '../components/DetailsHeader';\nimport IncidentSVG from '../images/svgs/incidentSVG';\n\nconst Incidents = () => {\n    let location = useLocation();\n    let { path } = useRouteMatch();\n    const dispatch = useDispatch();\n    const incidentsList = useSelector(listIncidents);\n    const errorMessage = useSelector(errorLog);\n\n    useEffect(() => {\n        if (location.pathname === path) {\n            dispatch(select(''));\n        }\n        // When switching through the tabs of navigation, resets the selected incident since it is just /incident param and not /incident/{incidentId....}\n    });\n    return <MainContainer>\n        <Grid item md={6}>\n            <IncidentList state={incidentsList} error={errorMessage} />\n        </Grid>\n        <Grid item md={6}>\n            <Switch>\n                <Route exact path={path}>\n                    <IncidentSVG/>\n                    <DetailsHeader header={'Select an incident'} align={'center'}/>\n                </Route>\n                <Route path={`${path}/:incidentId`} exact>\n                    <IncidentDetails incidents={incidentsList} error={errorMessage} />\n                </Route>\n                <Route path={`${path}/:incidentId/case/:caseId`}>\n                    <CaseDetails incidents={incidentsList} error={errorMessage} />\n                </Route>\n            </Switch>\n        </Grid>\n    </MainContainer>\n}\n\n\nexport default Incidents\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchLogins = createAsyncThunk('logins/fetchLogins', async () => {\n    const response = fetch(`${process.env.PORT || 'http://localhost:8080'}/logins/get-logins-db`)\n    // downloaded a fetch polyfill \n    .then(function(response) {\n        if (!response.ok) {\n            console.log('ok mounted!')\n            return response.statusText\n        }\n        return response.json();\n    })\n    return response\n});\n\nexport const loginSlice = createSlice({\n    name: 'login',\n    initialState: {\n        meta: {\n            status: 'idle',\n            fetch: true,\n            errorLog: {\n                error: false,\n                message: '',\n                errorCode: '',\n            }\n        },\n        data: {\n            isLoggedIn: false,\n            userId: '',\n            loginList: [],\n        }\n    },\n    reducers: {\n        login: (state) => {\n            state.data.isLoggedIn = true;\n            // https://www.youtube.com/watch?v=5zmaUSkyE1I\n            // for createntityadapter\n            // state.data.selectedIncidentId = payload;\n            state.meta.status = 'success';\n        },\n        logout: (state) => {\n            state.data.isLoggedIn = false;\n            state.meta.status = 'success';\n        },\n    },\n    extraReducers: {\n        [fetchLogins.pending]: (state) => {\n            state.meta.status = 'loading';\n        },\n        [fetchLogins.fulfilled]: (state, action) => {\n            state.meta.status = 'success';\n            state.data.loginList = action.payload;\n        },\n        [fetchLogins.rejected]: (state, action) => {\n            state.meta.status = 'failed';\n            state.meta.error = action.error.message\n        },\n    },\n})\n\nexport const { login, logout, verifyLogin } = loginSlice.actions;\n// export const loginInfo = state => state;\nexport const listLogins = state => state.login.data.loginList;\nexport const checkLoginStatus = state => state.login.data.isLoggedIn;\nexport const testpayload = (state, payload) => payload;\n\nexport default loginSlice.reducer;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n// import MainContainer from '../components/MainContainer'\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        minWidth: '150px',\n        maxWidth: '250px'\n    },\n    logoContainer: {\n        padding: theme.spacing(2,0)\n    }\n}));\n\nconst BrandLogo = (props) => {\n    const { darkMode } = props;\n    const classes = useStyles();\n    return <Typography align=\"center\" className={classes.logoContainer}>\n        <img className={classes.logo} src={ !darkMode ? require('./../images/IRlogo.svg').default : require('./../images/IRlogowhite.svg').default} alt={'Intuitive Robotics Logo'}/>\n    </Typography>\n}\n\nexport default BrandLogo;","\n\n// NOT REAL MIDDLEWARE, PLACEMENT FOR NOW UNTIL FINDING A MIDDLEWARE SOLUTION\n\n\nconst verifyLoginInfo = (info, logins) => {\n    const { email, password } = info;\n    const emailCheck = logins.filter(login => login.credientials.email === email);\n    const [loginInfo] = emailCheck;\n    if (!loginInfo) {\n        return false\n    }\n    // console.log(emailCheck,loginInfo, 'logininfo')\n    if (loginInfo.credientials.password === password) {\n        return true\n    } else {\n        return false\n    }\n}\n\nexport default verifyLoginInfo;","import { Typography, Grid, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkLoginStatus, listLogins, login } from '../app/reducers/logins/loginSlice';\nimport PrimaryButton from '../components/PrimaryButton';\nimport BrandLogo from '../components/BrandLogo';\nimport LoadingSVG from '../images/svgs/loadingSVG';\nimport verifyLoginInfo from '../app/reducers/logins/middleware/verifyLoginInfo.js'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        background: `url(${require('./../images/widebg.png').default})`,\n        backgroundColor: theme.palette.secondary.light,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n    },\n    loginColumn: {\n        height: 'inherit',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.primary.dark,\n    },\n    loginContainer: {\n        width: '100%',\n        margin: theme.spacing(4),\n        padding: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: theme.palette.primary.main\n    },\n    infoContainer: {\n        margin: theme.spacing(4),\n        padding: theme.spacing(4),\n    },\n    inputsContainer: {\n        padding: theme.spacing(1.5, 0),\n        color: theme.palette.secondary.light,\n    },\n    loadingContainer: {\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    caption: {\n        color: theme.palette.primary.lighter\n    },\n    textField: {\n        color: theme.palette.secondary.light,\n        margin: theme.spacing(1, 0),\n        '& .MuiInputBase-input, .MuiInputLabel-root': {\n            margin: theme.spacing(0, 1.5),\n            color: theme.palette.secondary.light,\n        },\n        '& .MuiInput-underline::after, .MuiInput-underline::before': {\n            borderColor: theme.palette.primary.light\n        }\n    },\n    title: {\n        fontWeight: '600',\n        color: theme.palette.primary.main\n    },\n    subTitle: {\n        color: theme.palette.primary.light\n    }\n}));\n\nconst validationSchema = yup.object({\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    password: yup\n        .string('Enter your password')\n        .min(8, 'Password should be of minimum 8 characters length')\n        .required('Password is required'),\n});\n\nconst Login = () => {\n    const [error, setError] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const isLoggedIn = useSelector(checkLoginStatus);\n    // Currently set to false in redux store\n\n    const loginList = useSelector(listLogins)\n    const formik = useFormik({\n        initialValues: {\n            email: 'janedoe@nps.gov',\n            password: 'jeffersonedu',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            setLoading(true);\n            const verify = verifyLoginInfo(values, loginList);\n            // console.log(verify, 'verify');\n            // comparing values from formik with loginList for a match, the function condition is above\n            if (verify) {\n                setTimeout(() => dispatch(login()), 1500);\n                // for demo'ing loading \n            } else {\n                setTimeout(() => setLoading(false), 500);\n                // for demo'ing loading \n                setError(true);\n            }\n        },\n    });\n    if (isLoggedIn) {\n        setLoading(false);\n        setError(false)\n    }\n    return <>\n        {\n            !isLoading ?\n                <Grid container className={classes.root}>\n                    <Grid item md={7} className={classes.imageColumn}>\n                        <div className={classes.infoContainer}>\n                            <Typography className={classes.title} variant='h3'>Making Wildfires<br /> More Managable.</Typography>\n                            <Typography className={classes.subTitle} variant='h6'>Lorem ipsum dolor sit amet, consectetur adipiscing elit</Typography>\n                        </div>\n                    </Grid>\n                    <Grid item md={4} className={classes.loginColumn}>\n                        <div className={classes.loginContainer}>\n                            <BrandLogo darkMode={true} />\n                            <form onSubmit={formik.handleSubmit}>\n                                <Typography variant={'body2'} align=\"center\" className={classes.caption}>Member Login</Typography>\n                                <div className={classes.inputsContainer}>\n                                    {\n                                        error ? <Alert severity=\"error\">Incorrect Login Information</Alert> : <></>\n                                    }\n                                    <TextField\n                                        fullWidth\n                                        className={classes.textField}\n                                        id=\"standard-basic\"\n                                        name=\"email\"\n                                        label=\"email\"\n                                        value={formik.values.email}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.email && Boolean(formik.errors.email)}\n                                        helperText={formik.touched.email && formik.errors.email}\n                                    />\n                                    <TextField\n                                        fullWidth\n                                        className={classes.textField}\n                                        id=\"password standard-basic\"\n                                        name=\"password\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        value={formik.values.password}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.password && Boolean(formik.errors.password)}\n                                        helperText={formik.touched.password && formik.errors.password}\n                                    />\n                                    <Typography variant='caption' className={classes.caption} align='right'>Forgot Password?</Typography>\n                                </div>\n                                <div>\n                                    <PrimaryButton\n                                        text={`Login`}\n                                        type=\"submit\"\n                                        fullWidth={true}\n                                    />\n                                </div>\n                            </form>\n                            <Typography align=\"center\" variant='caption' className={classes.caption}>Not a member? learn more!</Typography>\n                        </div>\n                    </Grid>\n                    <Grid item md={1}></Grid>\n                </Grid>\n                :\n                <Grid container>\n                    <Grid item md={3}></Grid>\n                    <Grid item md={6} className={classes.loadingContainer}>\n                        <div>\n                            <LoadingSVG />\n                        </div>\n                    </Grid>\n                    <Grid item md={3}></Grid>\n                </Grid>\n        }\n    </>\n\n}\n\nexport default Login;","import React from 'react';\nimport DetailsContainer from '../../components/DetailsContainer';\nimport DetailsBlock from '../../components/DetailsBlock';\nimport DetailsTitle from '../../components/DetailsTitle';\nimport DetailsContent from '../../components/DetailsContent';\nimport DetailsHeader from '../../components/DetailsHeader';\n\nconst MapDetails = () => {\n    return <>\n        <DetailsContainer>\n            <DetailsHeader header={`Map View`}/>\n            <DetailsBlock>\n                <DetailsTitle title={`Data Key`}/>\n            </DetailsBlock>\n            {/* refactoring the details block section to call the detailsTitle / detailsContent inside */}\n            <DetailsBlock>\n                <DetailsTitle title={`Incident Cases`}/>\n                <DetailsContent type={`Title`} content={'Lorem ipsum dolor sit amet'}/>\n            </DetailsBlock>\n            <DetailsBlock>\n                <DetailsTitle title={`Photos`}/>\n            </DetailsBlock>\n        </DetailsContainer>\n    </>\n}\n\nexport default MapDetails;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MainContainer from '../components/MainContainer';\n// import PageTitle from '../components/PageTitle';\n// import MapView from '../components/MapView';\nimport MapDetails from '../features/maps/MapDetails';\n// import MapDisplay from '../components/MapDisplay';\n// import MapDetails from './sub-pages/MapDetails';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        backgroundColor: theme.palette.secondary.light,\n    }\n}));\n\nconst Maps = () => {\n    const classes = useStyles();\n    return <>\n        <MainContainer>\n        <Grid item md={7} className={classes.container}>\n            {/* <MapDisplay/> */}\n        </Grid>\n        <Grid item md={5}>\n            <MapDetails/>\n        </Grid>\n        </MainContainer>\n    </>\n}\n\nexport default Maps","import React from 'react';\nimport MainContainer from '../components/MainContainer';\n// import { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\n// import { useSelector } from 'react-redux';\nimport DetailsContainer from '../components/DetailsContainer';\nimport DetailsHeader from '../components/DetailsHeader';\nimport DetailsBlock from '../components/DetailsBlock';\n// import UserBlock from '../components/UserBlock';\n// import DetailsTable from '../components/DetailsTable';\n// import { getSelectedIncident } from '../app/reducers/incidents/incidentSlice';\n// import ReactDOM from 'react-dom';\nconst getDetailBlocks = () => {\n    // get user id \n    const blocks = [\n        {\n            title: 'General Information',\n            rows: [\n                {\n                    type: 'Organization',\n                    content: 'National Park Service',\n                },\n                {\n                    type: 'Serving Since',\n                    content: 'June 2004',\n                },\n                {\n                    type: 'Email',\n                    content: 'rebeccastrictland@nps.gov',\n                },\n                {\n                    type: 'Phone',\n                    content: '1-800-472-3000 EXT:4',\n                },\n            ]\n        }\n    ]\n\n    return blocks || [];\n}\n\n// const useStyles = makeStyles((theme) => ({\n//     avatar: {\n//         width: theme.spacing(8),\n//         height: theme.spacing(8),\n//         margin: theme.spacing(3,0)\n//     },\n//     profileDetails: {\n//         display: 'flex',\n//         alignItems: 'center',\n//         padding: theme.spacing(3)\n//     },\n//     position: {\n//         color: theme.palette.primary.light,\n//     },\n//     fullName: {\n//         fontWeight: '500'\n//     }\n// }));  \n\n\n\nconst Profile = () => {\n    const profileDetails = getDetailBlocks();\n    // console.log(profileDetails)\n    // const classes = useStyles();\n    // const profileImg = require('./../images/profilePic.jpg');\n    // const [ title, content ] = profileDetails;\n    // getSelectedIncident\n    // const selectedIncident = incidents.find((incident) => !incident._id.indexOf(selectedId));\n    // const selectedIncident = useSelector(getSelectedIncident);\n    // console.log(selectedIncident)\n    // const { geographics, incident } = selectedIncident; \n    // console.log(title, content)\n    return <MainContainer>\n        <Grid item md={6}>\n            <DetailsContainer>\n                <DetailsHeader header={`Profile Information`} />\n                {/* <UserBlock/> */}\n                    {\n                        profileDetails.map((block, i) => <DetailsBlock key={i} title={block.title} detailRows={block.rows}/>)\n                    }\n            </DetailsContainer>\n        </Grid>\n        <Grid item md={6}>\n            <DetailsContainer>\n                <DetailsHeader header={`Incidents Reviewing`} />\n                <Typography variant='body2'>Neeeda get user's id to fetch incidents owned by user</Typography>\n                {/* <DetailsTable \n                    data={incident.cases} \n                    allowedKeys={[\"zip_code\", \"initial_time\", \"volume_traffic\"]}\n                    tableHeader={[\"Zip Code\", \"Initial Time\", \"Volume Traffic\"]}\n                    // Needa figure this out for the cell rows display to make it more reuseable \n                /> */}\n            </DetailsContainer>\n        </Grid>\n    </MainContainer>\n}\n\nexport default Profile","import React from 'react';\nimport MainContainer from '../components/MainContainer';\nimport { Grid } from '@material-ui/core';\nimport DetailsContainer from '../components/DetailsContainer';\nimport DetailsHeader from '../components/DetailsHeader';\n\nconst Summary = () => {\n        return <MainContainer>\n        <Grid item md={6}>\n            <DetailsContainer>\n                \n                <DetailsHeader header={`incident`} />\n                \n            </DetailsContainer>\n        </Grid>\n        <Grid item md={6}>\n\n        </Grid>\n    </MainContainer>\n}\n\n\n// const blocks =  [\n//     {\n//         title: 'Incident Information',\n//         rows:  [\n//             { type: 'Incident', content: geographics.municipal },\n//             { type: 'State', content: geographics.state }, \n//             { type: 'Region', content: geographics.region }, \n//             { type: 'ID', content: selectedIncident._id.substr(selectedId.length - 5) }, \n//             { type: 'Initial Time', content: `${geographics.time_stamp} ${geographics.time_zone} `}, \n//             { type: 'Zipcodes Affected', content: incident.zip_codes.map(zip => `${zip}, `) }\n//         ] \n//     },\n//     {\n//         title: 'Areas Affected',\n//         rows:  [\n//             { type: 'Volume Traffic', content: incident.volume_traffic },\n//             { type: 'Property', content: incident.property.map(property => `${property}, `) },\n//             { type: 'Wildfire Type', content: incident.wildfire_type },\n//         ] \n//     },\n//     {\n//         title: 'Additional Notes',\n//         rows:  [\n//             { content: 'Lorem ipsum dolor sit amet' },\n//         ] \n//     }\n// ];\n\nexport default Summary","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n        margin: theme.spacing(2)\n    },\n    profileDetails: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(1,1)\n    },\n    position: {\n        color: theme.palette.primary.light,\n    },\n    fullName: {\n        fontWeight: '500'\n    }\n}));\n\nconst UserBlock = (props) => {\n    const { profileData } = props;\n    const { information } = profileData;\n    const profileImg = require(`./../images/${information.img_src}`);\n    // console.log(profileData, 'profile');\n    const classes = useStyles();\n    return  <Grid container>\n    <Avatar className={classes.avatar} src={profileImg.default} />\n    <Grid className={classes.profileDetails}>\n        <Grid>\n            <Typography className={classes.position}>{information.position || `Position`}</Typography>\n            <Typography className={classes.fullName}>{information.fullname || `Full Name`}</Typography>\n        </Grid>\n    </Grid>\n</Grid>\n}\n\nexport default UserBlock;","import React, { useLayoutEffect, useState } from 'react';\nimport DetailsContainer from '../../components/DetailsContainer';\n// import { withStyles } from '@material-ui/core/styles';\n// import { LinearProgress } from '@material-ui/core';\nimport DetailsBlock from '../../components/DetailsBlock';\n// import DetailsTitle from '../../components/DetailsTitle';\n// import DetailsContent from '../../components/DetailsContent';\nimport DetailsHeader from '../../components/DetailsHeader';\n// import DetailsUser from '../../components/DetailsUser';\n// import { Divider} from '@material-ui/core';\nimport { useParams } from 'react-router';\nimport { getSelectedUpdate, getUpdateId, getUpdatesDetailBlocks, selectUpdate } from '../../app/reducers/updates/updateSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from \"lodash\";\nimport LoadingBar from '../../components/LoadingBar';\nimport UserBlock from '../../components/UserBlock';\nimport { Divider } from '@material-ui/core';\nimport DetailsTable from '../../components/DetailsTable';\n\nconst UpdateDetails = (props) => {\n    const { updates, profiles, incidents } = props;\n    const { updateId } = useParams();\n    const selectedId = useSelector(getUpdateId);\n    const isLoaded = !_.isEmpty(updates);\n    const [loading, setloading] = useState(isLoaded);\n    const selectedUpdate = useSelector(getSelectedUpdate);\n    const updateDetailBlocks = useSelector(getUpdatesDetailBlocks);\n    const dispatch = useDispatch();\n\n    useLayoutEffect(() => {\n        setloading(!isLoaded ? true : false);\n        if (!selectedId) {\n            dispatch(selectUpdate(updateId));\n        }\n        // If hard refresh, dispatch a select incident id based on the URL params to keep in sync\n        // Self: If want to keep the tabs in sync use local storage to store data alternative to useEffect.\n    }, [selectedId, isLoaded, updateId, dispatch]);\n    // console.log(selectedId,'the id');\n\n    if (!isLoaded || _.isEmpty(profiles)) { return null; }\n    // Returns early if data is not found\n    const [update] = updateDetailBlocks;\n    const [updateTime, updateInformation] = update.updateDetails;\n    const updateProfileId = selectedUpdate.general.userId;\n    const incidentId = selectedUpdate.updates.incidentId;\n    const filterProfile = profiles.find((profile) => !profile.information.profileId.indexOf(updateProfileId));\n\n\n    const selectedIncident = incidents.filter(incident => incident._id === incidentId)\n    const formattedIncidents = selectedIncident.map((data) => {\n        const { _id } = data;\n        return { _id, ...data.incident, ...data.geographics }\n    });\n    return <>\n        <DetailsContainer>\n            {\n                !loading ?\n                    <>\n                        <DetailsHeader header={`Update Incident`} />\n                        <UserBlock profileData={filterProfile} />\n                        <Divider />\n                        <DetailsBlock title={updateInformation.title} detailRows={updateInformation.rows}>\n                            <DetailsTable\n                                data={formattedIncidents}\n                                linkAccessors={\"_id\"}\n                                path={'/incidents'}\n                                allowedKeys={[\"municipal\", \"priority\", \"status\", \"volume_traffic\", \"_id\"]}\n                                tableHeader={[\"Municipal\", \"Priority\", \"Status\", \"Volume\", \"Id\"]}\n                            />\n                        </DetailsBlock>\n                        <DetailsBlock title={updateTime.title} detailRows={updateTime.rows} />\n                    </>\n                    :\n                    <LoadingBar />\n            }\n        </DetailsContainer>\n    </>\n}\n\nexport default UpdateDetails;","import React from 'react';\nimport { Avatar, Button, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink as RouterLink, useRouteMatch} from 'react-router-dom';\nimport { getUpdateId, selectUpdate } from '../../app/reducers/updates/updateSlice';\nimport Link from '@material-ui/core/Link';\nconst useStyles = makeStyles((theme) => ({\n    row: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    icon: {\n        backgroundColor: theme.palette.secondary.dark,\n        width: theme.spacing(6),\n        height: theme.spacing(6),\n        padding: theme.spacing(0),\n        margin: theme.spacing(0)\n    },\n    iconContainer: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    name: {\n        color: theme.palette.primary.dark,\n        fontWeight: '600',\n        marginBottom: theme.spacing(0.75)\n    },\n    containerSpaceBetween: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    button: {\n        textTransform: 'none',\n        borderRadius: '0px',\n        padding: theme.spacing(2),\n    },\n    link: {\n        color: theme.palette.secondary.dark\n    },\n    inactive: {\n        backgroundColor: theme.palette.secondary.lighter,\n        margin: theme.spacing(0.7, 0),\n        '&:hover, &:focus': {\n            backgroundColor: theme.palette.secondary.darkish,\n        },\n    },\n    active: {\n        backgroundColor: theme.palette.secondary.dark,\n        color: theme.palette.secondary.lighter,\n        margin: theme.spacing(0.7, 1.5),\n        '&$active': {\n            backgroundColor: theme.palette.secondary.dark,\n        },\n    },\n}));\n\n\n\nconst UpdatesItem = (props) => {\n    const { update } = props;\n    const {_id, general, profileData, updates} = update;\n    const { path } = useRouteMatch();\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const selectedId = useSelector(getUpdateId)\n    // console.log(selectedId, _id, 'ig')\n\n    const setSelectedId = (event) => {\n        dispatch(selectUpdate(event))\n        // console.log(event)\n    };\n    return <Link \n        key={_id} \n        component={RouterLink} \n        to={`${path}/${_id}`}\n        > \n        <Button\n        fullWidth\n        data-id={_id}\n        className={`${classes.button} ${_id === selectedId ? classes.active : classes.inactive}`}\n        onClick={(e) => setSelectedId(e.currentTarget.dataset.id)}\n        >\n        <Grid container>\n            <div className={classes.row}>\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                    <Grid item className={classes.iconContainer}>\n                    <Avatar className={classes.icon} src={require(`./../../images/${profileData.information.img_src}`).default}/>\n                    </Grid>\n                        <Grid item xs zeroMinWidth>\n                            <Grid container className={classes.containerSpaceBetween}>\n                                <Typography variant=\"body2\" className={classes.title}>{profileData.information.position}</Typography>\n                                <Typography variant=\"body2\" className={classes.title}>{general.timestamp}</Typography>\n                            </Grid>\n                            <Typography variant=\"body2\" align='left' className={classes.name}>{profileData.information.fullname}</Typography>\n                            <Typography variant=\"body2\" align='left' className={classes.message} noWrap>{`Updated Incident ${updates.incidentArea} [Id: ${updates.incidentId.substr(selectedId.length - 5)}]`}</Typography>\n                        </Grid>\n                </Grid>\n            </div>\n        </Grid>\n        </Button>\n    </Link>\n}\n\nexport default UpdatesItem;","\n// NOT REAL MIDDLEWARE, PLACEMENT FOR NOW UNTIL FINDING A MIDDLEWARE SOLUTION\n\n\nconst mergeUpdatesData = (updatesData, profilesData) => {\n    const updatesInfo = updatesData.map((update) => {\n        const profileId = update.general.userId\n        const getProfileData = profilesData.filter((profile)=> profileId === profile.information.profileId)\n        const [ profileData ] = getProfileData\n        return {...update, profileData}\n        // concating the profiles data into the updates data based on ID.\n    })\n    return updatesInfo;\n}\n\nexport default mergeUpdatesData;","import React from 'react';\nimport DetailsHeader from '../../components/DetailsHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport UpdatesItem from './UpdatesItem';\nimport mergeUpdatesData from '../../app/reducers/updates/middleware/mergeUpdatesData';\nimport LoadingBar from '../../components/LoadingBar';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        margin: theme.spacing(1),\n    },\n}));\n\nconst UpdatesList = (props) => {\n    const { updates, profiles } = props\n    const classes = useStyles();\n\n    const updatesData = mergeUpdatesData(updates, profiles)\n\n    return <div className={classes.container}>\n        <DetailsHeader header={`Updates`} />\n        {\n            updatesData.map((update, i) => {\n                return <React.Fragment key={i}>\n                    {\n                        update.profileData ? <UpdatesItem update={update} /> : <LoadingBar/>\n                    }\n                </React.Fragment>\n            })}\n    </div>\n\n}\n\nexport default UpdatesList;","import { Grid } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport MainContainer from '../components/MainContainer';\nimport UpdateDetails from '../features/updates/UpdateDetails';\nimport UpdatesList from '../features/updates/UpdatesList';\nimport {\n    Switch,\n    Route,\n    useLocation,\n    useRouteMatch,\n} from \"react-router-dom\";\nimport DetailsHeader from '../components/DetailsHeader';\n// import IncidentSVG from '../images/svgs/incidentSVG';\nimport { listUpdates, selectUpdate } from '../app/reducers/updates/updateSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProfiles } from '../app/reducers/profiles/profilesSlice';\nimport { listIncidents } from '../app/reducers/incidents/incidentSlice';\nimport UpdateSVG from '../images/svgs/updateSVG';\n\n\nconst Updates = () => {\n    // let location = useLocation();\n    let location = useLocation();\n    let { path } = useRouteMatch();\n    const dispatch = useDispatch();\n    const updatesList = useSelector(listUpdates);\n    const profilesList = useSelector(listProfiles);\n    const incidentList = useSelector(listIncidents);\n\n    useEffect(() => {\n        if (location.pathname === path) {\n            dispatch(selectUpdate(''));\n        }\n        // When switching through the tabs of navigation, resets the selected incident since it is just /incident param and not /incident/{incidentId....}\n    });\n    return <MainContainer>\n        <Grid item md={6}>\n            <UpdatesList updates={updatesList} profiles={profilesList}/>\n        </Grid>\n        <Grid item md={6}>\n        <Switch>\n                <Route exact path={path}>\n                    <UpdateSVG/>\n                    <DetailsHeader header={'Select an Update'} align={'center'}/>\n                </Route>\n                <Route path={`${path}/:updateId`} exact>\n                    <UpdateDetails updates={updatesList} profiles={profilesList} incidents={incidentList}/>\n                </Route>\n            </Switch>\n        </Grid>\n    </MainContainer>\n}\n\nexport default Updates","import React from 'react';\nimport Dashboard from '../pages/dashboard';\nimport Incidents from '../pages/incidents';\nimport Login from '../pages/login';\nimport Maps from '../pages/maps';\nimport Profile from '../pages/profile';\nimport Summary from '../pages/summary';\nimport Updates from '../pages/updates';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport MapIcon from '@material-ui/icons/Map';\n\nconst routes = [\n    {\n        path: '/',\n        label: 'Login',\n        uid: 'LOGIN',\n        component: <Login fontSize='large'/>,\n        menu: 'SECONDARY',\n        private_url: false,\n        subPages: false\n    },\n    {\n        path: '/',\n        label: 'Logout',\n        uid: 'LOGIN',\n        component: <Login fontSize='large'/>,\n        menu: 'SECONDARY',\n        private_url: false,\n        subPages: false\n    },\n    {\n        path:'/profile',\n        label: 'Profile',\n        uid: 'PROFILE',\n        private_url: true,\n        component: <Profile fontSize='large'/>,\n        menu: 'SECONDARY',\n        subPages: false\n    },\n    {\n        path:'/summary',\n        label: 'Summary',\n        uid: 'SUMMARY',\n        private_url: true,\n        component: <Summary/>,\n        menu: 'SECONDARY',\n        subPages: false\n    },\n    {\n        path: '/dashboard',\n        label: 'Dashboard',\n        uid: 'DASHBOARD',\n        icon: <HomeIcon fontSize='large'/>,\n        menu: 'PRIMARY',\n        component: <Dashboard/>,\n        private_url: true,\n    },\n    {\n        path: '/incidents',\n        label: 'Incidents',\n        uid: 'INCIDENTS',\n        icon: <AssignmentIcon fontSize='large'/>,\n        menu: 'PRIMARY',\n        private_url: true,\n        component: <Incidents/>,\n    },\n    {\n        path: '/updates',\n        label: 'Updates',\n        uid: 'UPDATES',\n        icon: <AnnouncementIcon fontSize='large'/>,\n        menu: 'PRIMARY',\n        private_url: true,\n        component: <Updates/>,\n    },\n    {\n        path: '/maps',\n        label: 'Maps',\n        uid: 'MAPS',\n        icon: <MapIcon fontSize='large'/>,\n        menu: 'PRIMARY',\n        private_url: true,\n        component: <Maps/>,\n    },\n]\n\nexport default routes\n","import React from 'react';\nimport { NavLink as RouterLink, withRouter } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport { Divider, Drawer, List, ListItem, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport routes from '../app/routes';\n\nconst drawerWidth = 100;\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        backgroundColor: theme.palette.primary.dark\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        backgroundColor: theme.palette.primary.dark\n    },\n    drawerItem: {\n        padding: theme.spacing(2, 1),\n        margin: theme.spacing(1, 0),\n        display: 'list-item',\n        textAlign: 'center',\n        color: theme.palette.secondary.light,\n        backgroundColor: theme.palette.primary.main,\n    },\n    drawerItemActive: {\n        borderLeft: `5px solid ${theme.palette.secondary.main}`,\n        backgroundColor: theme.palette.primary.darker,\n        display: 'list-item',\n    },\n    brandLogo: {\n        color: theme.palette.secondary.lighter,\n        padding: theme.spacing(1),\n        fontSize: '0.85rem',\n        fontWeight: 600,\n    },\n    dividerLight: {\n        backgroundColor: theme.palette.primary.light\n    },\n    navList: {\n        justifyContent: 'center',\n        color: theme.palette.secondary.light,\n    },\n    textCenter: {\n        display: 'inline-block',\n        textAlign: 'center'\n    }\n\n}));\n\nconst DrawerNav = () => {\n    const classes = useStyles();\n    const drawerItems = routes.filter((route) => route.menu === 'PRIMARY');\n    // Filtering for links that are in the primary navigation\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n            anchor=\"left\"\n        >\n            <Typography className={classes.brandLogo}>\n                WildfireICS\n        </Typography>\n            <Divider className={classes.dividerLight} />\n            <List className={classes.navList}>\n                {\n                    drawerItems.map(data => <Link\n                        component={RouterLink}\n                        // Passing the react router link component into material UI's Link component\n                        exact={false}\n                        activeClassName={classes.drawerItemActive}\n                        to={data.path}\n                        key={data.label}\n                    >\n                    <ListItem\n                        disableRipple\n                        button={true}\n                        className={`${classes.drawerItem}`}\n                    >\n                            <Typography>{data.icon}</Typography>\n                            {data.label}\n                        </ListItem>\n                    </Link>\n                    )\n                }\n            </List>\n        </Drawer>\n    )\n}\n\nexport default withRouter(DrawerNav)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, MenuItem } from '@material-ui/core';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Link from '@material-ui/core/Link';\nimport routes from '../app/routes';\nimport { checkLoginStatus } from './../app/reducers/logins/loginSlice'\n\nconst ITEM_HEIGHT = 40;\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: '0px 10px'\n    },\n}));\n\nconst ProfileNav = () => {\n    const profileImg = require('../images/profilePic.jpg');\n    const SecondaryLinks = routes.filter((route) => route.menu === 'SECONDARY');\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const isLoggedIn = useSelector(checkLoginStatus)\n    // const dispatch = useDispatch()\n\n    const classes = useStyles();\n    const [login, logout, profile] = SecondaryLinks\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    return <><IconButton\n        className={classes.margin}\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n    >\n        <Avatar src={profileImg.default} />\n    </IconButton>\n        <Menu\n            id=\"long-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={open}\n            onClose={handleClose}\n            PaperProps={{\n                style: {\n                    maxHeight: ITEM_HEIGHT * 4.5,\n                    width: '20ch',\n                },\n            }}\n        >\n            <Link\n                component={RouterLink}\n                // Passing the react router link component into material UI's Link component\n                // exact={false}\n                to={isLoggedIn? logout.path : login.path}\n            >\n                <MenuItem>\n                    {isLoggedIn? logout.label : login.label}\n                </MenuItem>\n            </Link>\n            <Link\n                component={RouterLink}\n                to={profile.path}\n            >\n                <MenuItem>\n                    {profile.label}\n                </MenuItem>\n            </Link>\n        </Menu>\n    </>\n}\n\n\n// const MenuLinks = (props) => {\n//     // const MyLink = React.forwardRef((props, ref) => <Link innerRef={ref} {...props} />);\n//     return <Link\n//         // component={RouterLink}\n//         // Passing the react router link component into material UI's Link component\n//         // exact={false}\n//         // to={props.path}\n//     >\n//         <MenuItem>\n//             {/* {props.label} */}\n//         </MenuItem>\n//     </Link>\n// }\n\nexport default ProfileNav;","import { Grid, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        color: theme.palette.primary.main,\n        fontSize: '1.4rem',\n        height: '100%',\n        fontWeight: '600',\n        display: 'flex',\n        alignItems: 'center'\n    }\n}));\n\nconst PageTitle = (props) => {\n    const classes = useStyles();\n    return <Grid item md={12}>\n        <Typography className={classes.title} variant=\"h1\">{props.title}</Typography>\n    </Grid>\n}\n\nexport default PageTitle;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Divider } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport DrawerNav from './DrawerNav';\nimport ProfileNav from './ProfileNav';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport routes from '../app/routes';\nimport PageTitle from './PageTitle';\nimport getDateTime from '../app/getDateTime';\n\nconst drawerWidth = 100;\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(0, 1.5)\n    },\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: \"center\",\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    },\n    date: {\n        padding: theme.spacing(0, 2)\n    },\n    appbar: {\n        display: 'flex',\n        alignContent: 'flex-end',\n        backgroundColor: theme.palette.secondary.lighter,\n        color: theme.palette.primary.dark,\n        boxShadow: '0px 0px 15px #dbdbdb',\n        padding: theme.spacing(0, 5)\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        backgroundColor: theme.palette.primary.dark\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        padding: theme.spacing(1.5, 2),\n        backgroundColor: theme.palette.primary.dark\n    },\n    summaryButton: {\n        fontWeight: 600,\n        borderRadius: '0px',\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.secondary.main,\n        margin: theme.spacing(0, 3),\n        '&:hover, &:focus': {\n            backgroundColor: theme.palette.secondary.darkish,\n        },\n    },\n    container: {\n        display: 'flex',\n        alignItems: \"center\",\n    },\n    dividerLight: {\n        backgroundColor: theme.palette.primary.light\n    }\n\n}));\n\n// const GetDateTime = () => {\n//     const classes = useStyles();\n//     const date = new Date();\n//     const getMonth = (d) => {\n//         const monthList = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n//         return monthList[d.getMonth()];\n//     }\n//     const getDay = (d) => {\n//         return d.getDate();\n//     }\n//     const getYear = (d) => {\n//         return d.getFullYear();\n//     }\n//     return <Typography className={classes.date}>{`${getMonth(date)} ${getDay(date)}, ${getYear(date)}`}</Typography>\n// }\n\n\nfunction Navigation(props) {\n    // console.log(props)\n    const locationInfo = props\n    // console.log(locationInfo, 'location ifno')\n    const classes = useStyles();\n    return (\n        <div>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appbar}>\n                <Toolbar className={classes.toolbar}>\n                    <div className={classes.container}>\n                        <LocationTitle location={locationInfo} />\n                        <div>\n                            <Link \n                                component={RouterLink}\n                                to={`/summary`}>\n                                <Button\n                                    className={classes.summaryButton}\n                                    variant=\"contained\"\n                                    disableElevation\n                                    // component={RouterLink}\n                                    // to={`/summary`}\n                                >\n\n                                    Summary<NavigateNextIcon />\n                                </Button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className={classes.container}>\n                        <Divider orientation=\"vertical\" flexItem />\n                        {/* <GetDateTime /> */}\n                        <Typography className={classes.date}>{getDateTime()}</Typography>\n\n                        <Divider orientation=\"vertical\" flexItem />\n                        <ProfileNav />\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <DrawerNav />\n        </div>\n    );\n}\n\nconst LocationTitle = (props) => {\n    // console.log(props, 'props')\n    const title = Object.assign({}, ...routes.filter(route => route.path === props.location.match.path))\n    return <PageTitle title={title.label} />\n}\n\nexport default withRouter(Navigation)\n","import { Typography } from '@material-ui/core';\nimport React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import MainContainer from '../components/MainContainer'\n\nconst ErrorPage = () => {\n    return <Typography>Oh dear.... you stumbled into the wrong part of the website</Typography>\n    // Need to find different format\n}\n\nexport default ErrorPage;","import React, { useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useSelector, useDispatch, batch } from 'react-redux';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport './App.css';\r\nimport {\r\n  fetchIncidents,\r\n} from './app/reducers/incidents/incidentSlice'\r\nimport Navigation from './components/Navigation';\r\nimport routes from './app/routes';\r\n// import NotFound from './pages/notFound';\r\nimport { checkLoginStatus, fetchLogins } from './app/reducers/logins/loginSlice';\r\nimport Login from './pages/login';\r\nimport { fetchUpdates } from './app/reducers/updates/updateSlice';\r\nimport { fetchProfiles } from './app/reducers/profiles/profilesSlice';\r\nimport ErrorPage from './pages/errorPage.js';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      lighter: '#b7c2c9',\r\n      light: '#69717B',\r\n      main: '#2a2f36',\r\n      dark: '#21252a'\r\n    },\r\n    secondary: {\r\n      lighter: '#FFFFFF',\r\n      light: '#f5f5f5',\r\n      main: '#6bf2bf',\r\n      darkish: '#57d9c1',\r\n      dark: '#058F95'\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Work Sans',\r\n      'Arial',\r\n      'sans-serif',\r\n    ].join(','),\r\n    useNextVariants: true\r\n  },\r\n});\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector(checkLoginStatus);\r\n\r\n  useEffect(() => {\r\n    batch(() => {\r\n      dispatch(fetchIncidents());\r\n      dispatch(fetchLogins());\r\n      dispatch(fetchUpdates());\r\n      dispatch(fetchProfiles());\r\n    })\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      <MuiThemeProvider theme={theme}>\r\n        <Router>\r\n          <Switch>\r\n            {\r\n              isLoggedIn ? routes.map(route => {\r\n                if (route.path === \"/\") {\r\n                  return <Route key={route.path} exact path=\"/\"><Redirect to=\"/dashboard\" /></Route>\r\n                } else {\r\n                  return <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                  >\r\n                    <Navigation />\r\n                    {route.component}\r\n                  </Route>\r\n                }\r\n              })\r\n                :\r\n                <Route exact path=\"/\">\r\n                  <Login />\r\n                </Route>\r\n            }\r\n            <Route path=\"*\">\r\n              {\r\n                isLoggedIn ? <ErrorPage /> : <Redirect to=\"/\" />\r\n              }\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </MuiThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\nimport incidentReducer from './reducers/incidents/incidentSlice'\nimport loginReducer from './reducers/logins/loginSlice'\nimport updateReducer from './reducers/updates/updateSlice'\nimport profileReducer from './reducers/profiles/profilesSlice'\n\nconst rootReducer = combineReducers({\n    incidents: incidentReducer,\n    login: loginReducer,\n    update: updateReducer,\n    profile: profileReducer\n})\n\nexport default rootReducer","import { configureStore } from '@reduxjs/toolkit';\r\nimport rootReducer from './rootReducer';\r\n\r\nexport default configureStore({\r\n  reducer: rootReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import { Provider } from 'react-redux';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store';\r\n// import { Auth0Provider } from \"@auth0/auth0-react\";\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n        </Provider>\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n","import React from 'react';\n\nconst LoadingSVG = () => {\n    return <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style={{\n            margin: \"auto\",\n            background: \"rgba(0, 0, 0, 0) none repeat scroll 0% 0%\",\n        }}\n        width=\"100\"\n        height=\"100\"\n        display=\"block\"\n        preserveAspectRatio=\"xMidYMid\"\n        viewBox=\"0 0 100 100\"\n    >\n        <path fill=\"#b7c2c9\" d=\"M12.5 12.5H35.5V35.5H12.5z\">\n            <animate\n                attributeName=\"fill\"\n                begin=\"0s\"\n                calcMode=\"discrete\"\n                dur=\"0.7633587786259541s\"\n                keyTimes=\"0;0.125;1\"\n                repeatCount=\"indefinite\"\n                values=\"#6bf2bf;#b7c2c9;#b7c2c9\"\n            ></animate>\n        </path>\n        <path fill=\"#b7c2c9\" d=\"M38.5 12.5H61.5V35.5H38.5z\">\n            <animate\n                attributeName=\"fill\"\n                begin=\"0.09541984732824427s\"\n                calcMode=\"discrete\"\n                dur=\"0.7633587786259541s\"\n                keyTimes=\"0;0.125;1\"\n                repeatCount=\"indefinite\"\n                values=\"#6bf2bf;#b7c2c9;#b7c2c9\"\n            ></animate>\n        </path>\n        <path fill=\"#b7c2c9\" d=\"M64.5 12.5H87.5V35.5H64.5z\">\n            <animate\n                attributeName=\"fill\"\n                begin=\"0.19083969465648853s\"\n                calcMode=\"discrete\"\n                dur=\"0.7633587786259541s\"\n                keyTimes=\"0;0.125;1\"\n                repeatCount=\"indefinite\"\n                values=\"#6bf2bf;#b7c2c9;#b7c2c9\"\n            ></animate>\n        </path>\n        <path fill=\"#b7c2c9\" d=\"M12.5 38.5H35.5V61.5H12.5z\">\n            <animate\n                attributeName=\"fill\"\n                begin=\"0.6679389312977099s\"\n                calcMode=\"discrete\"\n                dur=\"0.7633587786259541s\"\n                keyTimes=\"0;0.125;1\"\n                repeatCount=\"indefinite\"\n                values=\"#6bf2bf;#b7c2c9;#b7c2c9\"\n            ></animate>\n        </path>\n        <path fill=\"#b7c2c9\" d=\"M64.5 38.5H87.5V61.5H64.5z\">\n            <animate\n                attributeName=\"fill\"\n                begin=\"0.2862595419847328s\"\n                calcMode=\"discrete\"\n                dur=\"0.7633587786259541s\"\n                keyTimes=\"0;0.125;1\"\n                repeatCount=\"indefinite\"\n                values=\"#6bf2bf;#b7c2c9;#b7c2c9\"\n            ></animate>\n        </path>\n        <path fill=\"#b7c2c9\" d=\"M12.5 64.5H35.5V87.5H12.5z\">\n            <animate\n                attributeName=\"fill\"\n                begin=\"0.5725190839694656s\"\n                calcMode=\"discrete\"\n                dur=\"0.7633587786259541s\"\n                keyTimes=\"0;0.125;1\"\n                repeatCount=\"indefinite\"\n                values=\"#6bf2bf;#b7c2c9;#b7c2c9\"\n            ></animate>\n        </path>\n        <path fill=\"#b7c2c9\" d=\"M38.5 64.5H61.5V87.5H38.5z\">\n            <animate\n                attributeName=\"fill\"\n                begin=\"0.47709923664122134s\"\n                calcMode=\"discrete\"\n                dur=\"0.7633587786259541s\"\n                keyTimes=\"0;0.125;1\"\n                repeatCount=\"indefinite\"\n                values=\"#6bf2bf;#b7c2c9;#b7c2c9\"\n            ></animate>\n        </path>\n        <path fill=\"#b7c2c9\" d=\"M64.5 64.5H87.5V87.5H64.5z\">\n            <animate\n                attributeName=\"fill\"\n                begin=\"0.38167938931297707s\"\n                calcMode=\"discrete\"\n                dur=\"0.7633587786259541s\"\n                keyTimes=\"0;0.125;1\"\n                repeatCount=\"indefinite\"\n                values=\"#6bf2bf;#b7c2c9;#b7c2c9\"\n            ></animate>\n        </path>\n    </svg>\n}\n\nexport default LoadingSVG;","var map = {\n\t\"./IRlogo.svg\": 140,\n\t\"./IRlogowhite.svg\": 141,\n\t\"./caseslogo.svg\": 223,\n\t\"./currentLocation.svg\": 224,\n\t\"./datapoints.svg\": 225,\n\t\"./derickkabbeko.jpg\": 226,\n\t\"./fireExample1.jpg\": 227,\n\t\"./fireExample2.jpg\": 228,\n\t\"./fireExample3.jpg\": 229,\n\t\"./incidentlogo.svg\": 230,\n\t\"./irbg-01.png\": 231,\n\t\"./janedoe.jpg\": 232,\n\t\"./loading.svg\": 233,\n\t\"./profilePic.jpg\": 142,\n\t\"./svgs/incidentSVG\": 96,\n\t\"./svgs/incidentSVG.js\": 96,\n\t\"./svgs/loadingSVG\": 69,\n\t\"./svgs/loadingSVG.js\": 69,\n\t\"./svgs/updateSVG\": 97,\n\t\"./svgs/updateSVG.js\": 97,\n\t\"./widebg.png\": 143,\n\t\"./williamstagner.jpg\": 234\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 88;","import React from 'react';\n\nconst IncidentSVG = () => {\n    return <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-name=\"Layer 1\"\n        viewBox=\"0 0 1144 701\"\n    >\n        <path\n            fill=\"#6bf2bf\"\n            d=\"M944.77 358.14c51.16 57.81.86 203.24-101.23 271.05-132.16 87.8-318.3 23.68-416.27-41.86C396 566.41 274.85 485.37 268 358.14 257 151.55 556.19-12.18 625.17 29.53 682.28 64.07 569 231.78 654.74 310c78.86 71.9 231.76-17.7 290.03 48.14z\"\n        ></path>\n        <path\n            fill=\"#6bf2bf\"\n            d=\"M854 258c-37.11 42.69-105.25 41.9-141 10-49.91-44.54-33.35-146.73 26-173 39-17.28 93.76-.48 121 41 24 36.49 23.8 87.72-6 122z\"\n        ></path>\n        <ellipse\n            cx=\"229.6\"\n            cy=\"141.83\"\n            fill=\"#6bf2bf\"\n            rx=\"37.23\"\n            ry=\"16.55\"\n            transform=\"rotate(-72.89 229.608 141.833)\"\n        ></ellipse>\n        <ellipse\n            cx=\"230.05\"\n            cy=\"582\"\n            fill=\"#6bf2bf\"\n            rx=\"51.02\"\n            ry=\"118.12\"\n            transform=\"rotate(-45.01 229.995 581.95)\"\n        ></ellipse>\n        <path fill=\"#058f95\" d=\"M456.04 246.07H1009V299.01H456.04z\"></path>\n        <path fill=\"#fff\" d=\"M413 322.62H965.96V375.56H413z\"></path>\n        <path fill=\"#fff\" d=\"M413 389.34H965.96V442.28H413z\"></path>\n        <path fill=\"#fff\" d=\"M413 456.06H965.96V509H413z\"></path>\n        <path\n            fill=\"#a6b2bc\"\n            d=\"M435.79 339.67H564.9100000000001V356.65000000000003H435.79z\"\n        ></path>\n        <path\n            fill=\"#a6b2bc\"\n            d=\"M601.54 339.22H706.98V356.20000000000005H601.54z\"\n        ></path>\n        <path\n            fill=\"#a6b2bc\"\n            d=\"M740.04 339.22H820.4599999999999V356.20000000000005H740.04z\"\n        ></path>\n        <path\n            fill=\"#a6b2bc\"\n            d=\"M850.86 339.22H931.28V356.20000000000005H850.86z\"\n        ></path>\n        <path\n            fill=\"#a6b2bc\"\n            d=\"M436.19 407.67H565.31V424.65000000000003H436.19z\"\n        ></path>\n        <path\n            fill=\"#a6b2bc\"\n            d=\"M601.94 407.23H707.3800000000001V424.21000000000004H601.94z\"\n        ></path>\n        <path\n            fill=\"#a6b2bc\"\n            d=\"M740.5 407.23H820.92V424.21000000000004H740.5z\"\n        ></path>\n        <path\n            fill=\"#a6b2bc\"\n            d=\"M851.31 407.23H931.7299999999999V424.21000000000004H851.31z\"\n        ></path>\n        <path fill=\"#a6b2bc\" d=\"M437.08 474.69H566.2V491.67H437.08z\"></path>\n        <path fill=\"#a6b2bc\" d=\"M602.83 474.24H708.27V491.22H602.83z\"></path>\n        <path fill=\"#a6b2bc\" d=\"M741.51 474.24H821.93V491.22H741.51z\"></path>\n        <path fill=\"#a6b2bc\" d=\"M852.33 474.24H932.75V491.22H852.33z\"></path>\n        <path fill=\"#fff\" d=\"M479.69 263.81H608.81V280.79H479.69z\"></path>\n        <path\n            fill=\"#fff\"\n            d=\"M645.45 263.36H750.8900000000001V280.34000000000003H645.45z\"\n        ></path>\n        <path\n            fill=\"#fff\"\n            d=\"M790.06 263.36H870.4799999999999V280.34000000000003H790.06z\"\n        ></path>\n        <path\n            fill=\"#fff\"\n            d=\"M900.88 263.36H981.3V280.34000000000003H900.88z\"\n        ></path>\n        <path\n            fill=\"#2a2f36\"\n            d=\"M228.49 371.53l57.21 25.64-62.7 59.26a10.87 10.87 0 00-.67 15.13l21.37 23.34a10.48 10.48 0 0014.91.45l59.58-56.27 25.36 68.64c3.38 9.14 15.68 8.77 19.41.44L466 278.28c3.93-8.77-4.89-17.86-13.24-14.19l-223.54 87.76c-8.87 3.21-9.09 15.93-.73 19.68z\"\n        ></path>\n    </svg>\n}\n\nexport default IncidentSVG","import React from \"react\";\n\nconst UpdateSVG = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      data-name=\"Layer 1\"\n      viewBox=\"0 0 1144 701\"\n    >\n      <path\n        fill=\"#6bf2bf\"\n        d=\"M202.27 337.85c-51.17-57.8-.86-203.23 101.22-271C435.66-21 621.79 43.13 719.77 108.67 751 129.58 872.19 210.62 879 337.85c11.06 206.59-288.15 370.33-357.13 328.61-57.11-34.53 56.21-202.24-29.57-280.46-78.86-71.91-231.76 17.69-290.03-48.15z\"\n      ></path>\n      <path\n        fill=\"#6bf2bf\"\n        d=\"M240 461c37.11-42.7 105.25-41.9 141-10 49.91 44.53 33.35 146.72-26 173-39 17.27-93.76.47-121-41-23.93-36.49-23.76-87.73 6-122z\"\n      ></path>\n      <ellipse\n        cx=\"851.44\"\n        cy=\"553.16\"\n        fill=\"#6bf2bf\"\n        rx=\"37.23\"\n        ry=\"16.55\"\n        transform=\"rotate(-72.89 851.444 553.165)\"\n      ></ellipse>\n      <ellipse\n        cx=\"893.26\"\n        cy=\"146\"\n        fill=\"#6bf2bf\"\n        rx=\"51.02\"\n        ry=\"118.12\"\n        transform=\"rotate(-45.01 893.164 146.023)\"\n      ></ellipse>\n      <path fill=\"#058f95\" d=\"M413.04 196H966V286H413.04z\"></path>\n      <path fill=\"#fff\" d=\"M527.88 214.81H657V231.79H527.88z\"></path>\n      <path fill=\"#fff\" d=\"M624.45 245.36H851V262H624.45z\"></path>\n      <path\n        fill=\"#fff\"\n        d=\"M527.88 245.36H608.3V262.34000000000003H527.88z\"\n      ></path>\n      <circle cx=\"464.5\" cy=\"239.5\" r=\"27.5\" fill=\"#fff\"></circle>\n      <path fill=\"#fff\" d=\"M372.28 308.25H925.24V398.25H372.28z\"></path>\n      <path fill=\"#a6b2bc\" d=\"M487.11 327.06H616.23V344.04H487.11z\"></path>\n      <path fill=\"#a6b2bc\" d=\"M583.68 357.61H810.23V374.25H583.68z\"></path>\n      <path\n        fill=\"#a6b2bc\"\n        d=\"M487.11 357.61H567.53V374.59000000000003H487.11z\"\n      ></path>\n      <circle cx=\"423.74\" cy=\"351.75\" r=\"27.5\" fill=\"#a6b2bc\"></circle>\n      <path fill=\"#fff\" d=\"M371.82 412.82H924.78V502.82H371.82z\"></path>\n      <path fill=\"#a6b2bc\" d=\"M486.66 431.63H615.78V448.61H486.66z\"></path>\n      <path fill=\"#a6b2bc\" d=\"M583.23 462.19H809.78V478.83H583.23z\"></path>\n      <path fill=\"#a6b2bc\" d=\"M486.66 462.19H567.08V479.17H486.66z\"></path>\n      <circle cx=\"423.28\" cy=\"456.32\" r=\"27.5\" fill=\"#a6b2bc\"></circle>\n      <path\n        fill=\"#2a2f36\"\n        d=\"M198.49 340.53l57.21 25.64-62.7 59.26a10.87 10.87 0 00-.67 15.13l21.37 23.34a10.48 10.48 0 0014.91.45l59.58-56.27 25.36 68.64c3.38 9.14 15.68 8.77 19.41.44L436 247.28c3.93-8.77-4.89-17.86-13.24-14.19l-223.54 87.76c-8.87 3.21-9.09 15.93-.73 19.68z\"\n      ></path>\n    </svg>\n  );\n}\n\nexport default UpdateSVG;\n"],"sourceRoot":""}